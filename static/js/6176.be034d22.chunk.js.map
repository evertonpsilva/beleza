{"version":3,"file":"static/js/6176.be034d22.chunk.js","mappings":"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","sources":["../node_modules/@dhiwise/react-switch/src/icons.jsx","../node_modules/@dhiwise/react-switch/src/getBackgroundColor.js","../node_modules/@dhiwise/react-switch/src/hexColorPropType.js","../node_modules/@dhiwise/react-switch/node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../node_modules/@dhiwise/react-switch/src/hooks/useAsyncExtendedState.js","../node_modules/@dhiwise/react-switch/src/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-select/dist/useStateManager-7e1e8489.esm.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","../node_modules/stylis/src/Utility.js","../node_modules/stylis/src/Tokenizer.js","../node_modules/stylis/src/Enum.js","../node_modules/stylis/src/Serializer.js","../node_modules/stylis/src/Parser.js","../node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","../node_modules/stylis/src/Middleware.js","../node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","../node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","../node_modules/@emotion/hash/dist/emotion-hash.esm.js","../node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","../node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/react-select/dist/react-select.esm.js","../node_modules/@tanstack/react-table/src/index.tsx","../node_modules/@tanstack/table-core/src/utils.ts","../node_modules/@tanstack/table-core/src/core/headers.ts","../node_modules/@tanstack/table-core/src/features/ColumnSizing.ts","../node_modules/@tanstack/table-core/src/features/Expanding.ts","../node_modules/@tanstack/table-core/src/filterFns.ts","../node_modules/@tanstack/table-core/src/features/Filters.ts","../node_modules/@tanstack/table-core/src/aggregationFns.ts","../node_modules/@tanstack/table-core/src/features/Ordering.ts","../node_modules/@tanstack/table-core/src/features/RowSelection.ts","../node_modules/@tanstack/table-core/src/sortingFns.ts","../node_modules/@tanstack/table-core/src/core/table.ts","../node_modules/@tanstack/table-core/src/features/Visibility.ts","../node_modules/@tanstack/table-core/src/features/Grouping.ts","../node_modules/@tanstack/table-core/src/features/Pinning.ts","../node_modules/@tanstack/table-core/src/features/Sorting.ts","../node_modules/@tanstack/table-core/src/features/Pagination.ts","../node_modules/@tanstack/table-core/src/core/column.ts","../node_modules/@tanstack/table-core/src/core/row.ts","../node_modules/@tanstack/table-core/src/core/cell.ts","../node_modules/@tanstack/table-core/src/columnHelper.ts","../node_modules/@tanstack/table-core/src/utils/getCoreRowModel.ts","../node_modules/@tanstack/table-core/src/utils/getSortedRowModel.ts"],"sourcesContent":["/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 instructure-react\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport React from \"react\";\n\nexport const uncheckedIcon = (\n  <svg\n    viewBox=\"-2 -5 14 20\"\n    height=\"100%\"\n    width=\"100%\"\n    style={{ position: \"absolute\", top: 0 }}\n  >\n    <path\n      d=\"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\"\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const checkedIcon = (\n  <svg\n    height=\"100%\"\n    width=\"100%\"\n    viewBox=\"-2 -5 17 21\"\n    style={{ position: \"absolute\", top: 0 }}\n  >\n    <path\n      d=\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\"\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);\n","function createBackgroundColor(\n  pos,\n  checkedPos,\n  uncheckedPos,\n  offColor,\n  onColor\n) {\n  const relativePos = (pos - uncheckedPos) / (checkedPos - uncheckedPos)\n  if (relativePos === 0) {\n    return offColor\n  }\n  if (relativePos === 1) {\n    return onColor\n  }\n\n  let newColor = '#'\n  for (let i = 1; i < 6; i += 2) {\n    const offComponent = parseInt(offColor.substr(i, 2), 16)\n    const onComponent = parseInt(onColor.substr(i, 2), 16)\n    const weightedValue = Math.round(\n      (1 - relativePos) * offComponent + relativePos * onComponent\n    )\n    let newComponent = weightedValue.toString(16)\n    if (newComponent.length === 1) {\n      newComponent = `0${newComponent}`\n    }\n    newColor += newComponent\n  }\n  return newColor\n}\n\nfunction convertShorthandColor(color) {\n  if (color.length >= 7) {\n    return color\n  }\n  let sixDigitColor = '#'\n  for (let i = 1; i < 4; i += 1) {\n    sixDigitColor += color[i] + color[i]\n  }\n  return sixDigitColor\n}\n\nexport default function getBackgroundColor(\n  pos,\n  checkedPos,\n  uncheckedPos,\n  offColor,\n  onColor\n) {\n  const sixDigitOffColor = convertShorthandColor(offColor)\n  const sixDigitOnColor = convertShorthandColor(onColor)\n  return createBackgroundColor(\n    pos,\n    checkedPos,\n    uncheckedPos,\n    sixDigitOffColor,\n    sixDigitOnColor\n  )\n}\n","// Make sure color props are strings that start with \"#\" since other ways to write colors are not supported.\nconst hexColorPropType = (props, propName, componentName) => {\n  const prop = props[propName];\n  if (\n    typeof prop !== \"string\" ||\n    prop[0] !== \"#\" ||\n    (prop.length !== 4 && prop.length !== 7)\n  ) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}'. '${propName}' has to be either a 3-digit or 6-digit hex-color string. Valid examples: '#abc', '#123456'`\n    );\n  }\n  return null;\n};\n\nexport default hexColorPropType;\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { useState, useMemo } from 'react'\n\nexport const useAsyncExtendedState = (initialState) => {\n  const [state, setState] = useState(initialState)\n\n  const asyncSetState = useMemo(\n    () => async (nextState) => {\n      const initialNextState = nextState\n\n      try {\n        if (nextState instanceof Promise) {\n          nextState = await nextState\n\n          if (nextState === initialNextState) {\n            // there was an error but it was caught by something else - i.e., nextState.catch()\n            throw new Error(`Uncatchable error.`)\n          }\n        }\n\n        setState((state) => {\n          if (typeof nextState === `function`) {\n            nextState = nextState(state)\n          }\n\n          return nextState\n        })\n      } catch (error) {}\n    },\n    []\n  )\n\n  const asyncExtendState = useMemo(\n    () => async (extendState) => {\n      const initialExtendState = extendState\n\n      try {\n        if (extendState instanceof Promise) {\n          extendState = await extendState\n\n          if (extendState === initialExtendState) {\n            // there was an error but it was caught by something else - i.e., extendState.catch()\n            throw new Error(`Uncatchable error.`)\n          }\n        }\n\n        setState((state) => {\n          if (typeof extendState === `function`) {\n            extendState = extendState(state)\n          }\n\n          return { ...state, ...extendState }\n        })\n      } catch (err) {}\n    },\n    []\n  )\n\n  return [state, asyncSetState, asyncExtendState]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  checkedIcon as defaultCheckedIcon,\n  uncheckedIcon as defaultUncheckedIcon\n} from './icons.jsx'\nimport getBackgroundColor from './getBackgroundColor'\nimport hexColorPropType from './hexColorPropType'\nimport { useAsyncExtendedState } from './hooks/useAsyncExtendedState.js'\n// import styles from './styles.module.css'\n\nconst ReactSwitch = ({\n  checked,\n  disabled,\n  className,\n  offColor,\n  onColor,\n  offHandleColor,\n  onHandleColor,\n  checkedIcon,\n  uncheckedIcon,\n  checkedHandleIcon,\n  uncheckedHandleIcon,\n  boxShadow,\n  activeBoxShadow,\n  height,\n  width,\n  borderRadius,\n  handleDiameter,\n  backgroundStyleProp,\n  handleStyleProp,\n  ...rest\n}) => {\n  // const [state, setState] = React.useState({});\n  const [state, normalSetState, setState] = useAsyncExtendedState({})\n\n  const $isMounted = React.useRef(false)\n  const $inputRef = React.useRef()\n\n  const uiVals = React.useMemo(() => {\n    const result = {}\n    result.$handleDiameter = handleDiameter || height - 2\n    result.$checkedPos = Math.max(\n      width - height,\n      width - (height + result.$handleDiameter) / 2\n    )\n    result.$uncheckedPos = Math.max(0, (height - result.$handleDiameter) / 2)\n    result.$lastDragAt = 0\n    result.$lastKeyUpAt = 0\n\n    setState({\n      $pos: checked ? result.$checkedPos : result.$uncheckedPos\n    })\n\n    return result\n  }, [handleDiameter, height, width, checked])\n\n  React.useEffect(() => {\n    $isMounted.current = true\n\n    return () => {\n      $isMounted.current = false\n    }\n  }, [])\n\n  React.useEffect(() => {\n    setState({\n      $pos: checked ? uiVals.$checkedPos : uiVals.$uncheckedPos\n    })\n  }, [uiVals])\n\n  function $onDragStart(clientX) {\n    $inputRef.current.focus()\n    // setState((oldState) => ({\n    //   ...oldState,\n    //   $startX: clientX,\n    //   $hasOutline: true,\n    //   $dragStartingTime: Date.now()\n    // }))\n    setState({\n      $startX: clientX,\n      $hasOutline: true,\n      $dragStartingTime: Date.now()\n    })\n  }\n\n  function $onDrag(clientX) {\n    const { $startX, $isDragging, $pos } = state\n    const startPos = checked ? uiVals.$checkedPos : uiVals.$uncheckedPos\n    const mousePos = startPos + clientX - $startX\n    // We need this check to fix a windows glitch where onDrag is triggered onMouseDown in some cases\n    if (!$isDragging && clientX !== $startX) {\n      // setState((oldState) => ({ ...oldState, $isDragging: true }))\n      setState({ $isDragging: true })\n    }\n    const newPos = Math.min(\n      uiVals.$checkedPos,\n      Math.max(uiVals.$uncheckedPos, mousePos)\n    )\n    // Prevent unnecessary rerenders\n    if (newPos !== $pos) {\n      // setState((oldState) => ({ ...oldState, $pos: newPos }))\n      setState({ $pos: newPos })\n    }\n  }\n\n  function $onDragStop(event) {\n    const { $pos, $isDragging, $dragStartingTime } = state\n    const halfwayCheckpoint = (uiVals.$checkedPos + uiVals.$uncheckedPos) / 2\n\n    /*\n      Set position state back to the previous position even if user drags the switch with intention to change the state.\n      This is to prevent the switch from getting stuck in the middle if the event isn't handled in the onChange callback.\n    */\n    const prevPos = checked ? uiVals.$checkedPos : uiVals.$uncheckedPos\n    // setState((oldState) => ({ ...oldState, $pos: prevPos }))\n    setState({ $pos: prevPos })\n\n    // Act as if the user clicked the handle if they didn't drag it _or_ the dragged it for less than 250ms\n    const timeSinceStart = Date.now() - $dragStartingTime\n    const isSimulatedClick = !$isDragging || timeSinceStart < 250\n\n    // Handle when the user has dragged the switch more than halfway from either side\n    const isDraggedHalfway =\n      (checked && $pos <= halfwayCheckpoint) ||\n      (!checked && $pos >= halfwayCheckpoint)\n\n    if (isSimulatedClick || isDraggedHalfway) {\n      $onChange(event)\n    }\n\n    if ($isMounted.current) {\n      // setState((oldState) => ({\n      //   ...oldState,\n      //   $isDragging: false,\n      //   $hasOutline: false\n      // }))\n      setState({\n        $isDragging: false,\n        $hasOutline: false\n      })\n    }\n    uiVals.$lastDragAt = Date.now()\n  }\n\n  function $onMouseDown(event) {\n    event.preventDefault()\n    // Ignore right click and scroll\n    if (typeof event.button === 'number' && event.button !== 0) {\n      return\n    }\n\n    $onDragStart(event.clientX)\n    window.addEventListener('mousemove', $onMouseMove)\n    window.addEventListener('mouseup', $onMouseUp)\n  }\n\n  function $onMouseMove(event) {\n    event.preventDefault()\n    $onDrag(event.clientX)\n  }\n\n  function $onMouseUp(event) {\n    $onDragStop(event)\n    window.removeEventListener('mousemove', $onMouseMove)\n    window.removeEventListener('mouseup', $onMouseUp)\n  }\n\n  function $onTouchStart(event) {\n    uiVals.$checkedStateFromDragging = null\n    $onDragStart(event.touches[0].clientX)\n  }\n\n  function $onTouchMove(event) {\n    $onDrag(event.touches[0].clientX)\n  }\n\n  function $onTouchEnd(event) {\n    event.preventDefault()\n    $onDragStop(event)\n  }\n\n  function $onInputChange(event) {\n    // This condition is unfortunately needed in some browsers where the input's change event might get triggered\n    // right after the dragstop event is triggered (occurs when dropping over a label element)\n    if (Date.now() - uiVals.$lastDragAt > 50) {\n      $onChange(event)\n      // Prevent clicking label, but not key activation from setting outline to true - yes, this is absurd\n      if (Date.now() - uiVals.$lastKeyUpAt > 50) {\n        if ($isMounted) {\n          // setState((oldState) => ({ ...oldState, $hasOutline: false }))\n          setState({ $hasOutline: false })\n        }\n      }\n    }\n  }\n\n  function $onKeyUp() {\n    uiVals.$lastKeyUpAt = Date.now()\n  }\n\n  function $setHasOutline() {\n    // setState((oldState) => ({ ...oldState, $hasOutline: true }))\n    setState({ $hasOutline: true })\n  }\n\n  function $unsetHasOutline() {\n    // setState((oldState) => ({ ...oldState, $hasOutline: false }))\n    setState({ $hasOutline: false })\n  }\n\n  function $onClick(event) {\n    event.preventDefault()\n    $inputRef.current.focus()\n    $onChange(event)\n    if ($isMounted) {\n      // setState((oldState) => ({ ...oldState, $hasOutline: false }))\n      setState({ $hasOutline: false })\n    }\n  }\n\n  function $onChange(event) {\n    const { onChange, id } = rest\n    onChange(!checked, event, id)\n  }\n\n  const { $pos, $isDragging, $hasOutline } = state\n\n  const backgroundStyle = {\n    height,\n    width,\n    margin: Math.max(0, (uiVals.$handleDiameter - height) / 2),\n    position: 'relative',\n    background: getBackgroundColor(\n      $pos,\n      uiVals.$checkedPos,\n      uiVals.$uncheckedPos,\n      offColor,\n      onColor\n    ),\n    borderRadius: typeof borderRadius === 'number' ? borderRadius : height / 2,\n    cursor: disabled ? 'default' : 'pointer',\n    WebkitTransition: $isDragging ? null : 'background 0.25s',\n    MozTransition: $isDragging ? null : 'background 0.25s',\n    transition: $isDragging ? null : 'background 0.25s',\n    ...backgroundStyleProp\n  }\n\n  const checkedIconStyle = {\n    height,\n    width: Math.min(\n      height * 1.5,\n      width - (uiVals.$handleDiameter + height) / 2 + 1\n    ),\n    position: 'relative',\n    opacity:\n      ($pos - uiVals.$uncheckedPos) /\n      (uiVals.$checkedPos - uiVals.$uncheckedPos),\n    pointerEvents: 'none',\n    WebkitTransition: $isDragging ? null : 'opacity 0.25s',\n    MozTransition: $isDragging ? null : 'opacity 0.25s',\n    transition: $isDragging ? null : 'opacity 0.25s'\n  }\n\n  const uncheckedIconStyle = {\n    height,\n    width: Math.min(\n      height * 1.5,\n      width - (uiVals.$handleDiameter + height) / 2 + 1\n    ),\n    position: 'absolute',\n    opacity:\n      1 -\n      ($pos - uiVals.$uncheckedPos) /\n      (uiVals.$checkedPos - uiVals.$uncheckedPos),\n    right: 0,\n    top: 0,\n    pointerEvents: 'none',\n    WebkitTransition: $isDragging ? null : 'opacity 0.25s',\n    MozTransition: $isDragging ? null : 'opacity 0.25s',\n    transition: $isDragging ? null : 'opacity 0.25s'\n  }\n\n  const handleStyle = {\n    height: uiVals.$handleDiameter,\n    width: uiVals.$handleDiameter,\n    background: getBackgroundColor(\n      $pos,\n      uiVals.$checkedPos,\n      uiVals.$uncheckedPos,\n      offHandleColor,\n      onHandleColor\n    ),\n    display: 'inline-block',\n    cursor: disabled ? 'default' : 'pointer',\n    borderRadius: typeof borderRadius === 'number' ? borderRadius - 1 : '50%',\n    position: 'absolute',\n    transform: `translateX(${$pos}px)`,\n    top: Math.max(0, (height - uiVals.$handleDiameter) / 2),\n    outline: 0,\n    boxShadow: $hasOutline ? activeBoxShadow : boxShadow,\n    border: 0,\n    WebkitTransition: $isDragging\n      ? null\n      : 'background-color 0.25s, transform 0.25s, box-shadow 0.15s',\n    MozTransition: $isDragging\n      ? null\n      : 'background-color 0.25s, transform 0.25s, box-shadow 0.15s',\n    transition: $isDragging\n      ? null\n      : 'background-color 0.25s, transform 0.25s, box-shadow 0.15s',\n    ...handleStyleProp\n  }\n\n  const uncheckedHandleIconStyle = {\n    height: uiVals.$handleDiameter,\n    width: uiVals.$handleDiameter,\n    opacity: Math.max(\n      (1 -\n        ($pos - uiVals.$uncheckedPos) /\n        (uiVals.$checkedPos - uiVals.$uncheckedPos) -\n        0.5) *\n      2,\n      0\n    ),\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    pointerEvents: 'none',\n    WebkitTransition: $isDragging ? null : 'opacity 0.25s',\n    MozTransition: $isDragging ? null : 'opacity 0.25s',\n    transition: $isDragging ? null : 'opacity 0.25s'\n  }\n\n  const checkedHandleIconStyle = {\n    height: uiVals.$handleDiameter,\n    width: uiVals.$handleDiameter,\n    opacity: Math.max(\n      (($pos - uiVals.$uncheckedPos) /\n        (uiVals.$checkedPos - uiVals.$uncheckedPos) -\n        0.5) *\n      2,\n      0\n    ),\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    pointerEvents: 'none',\n    WebkitTransition: $isDragging ? null : 'opacity 0.25s',\n    MozTransition: $isDragging ? null : 'opacity 0.25s',\n    transition: $isDragging ? null : 'opacity 0.25s'\n  }\n\n  const inputStyle = {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    width: 1\n  }\n\n  const rootStyle = {\n    position: 'relative',\n    display: 'inline-block',\n    textAlign: 'left',\n    opacity: disabled ? 0.5 : 1,\n    direction: 'ltr',\n    borderRadius: height / 2,\n    WebkitTransition: 'opacity 0.25s',\n    MozTransition: 'opacity 0.25s',\n    transition: 'opacity 0.25s',\n    touchAction: 'none',\n    WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none'\n  }\n\n  return (\n    <div className={className} style={rootStyle}>\n      <div\n        className='react-switch-bg'\n        style={backgroundStyle}\n        onClick={disabled ? null : $onClick}\n        onMouseDown={(e) => e.preventDefault()}\n      >\n        {checkedIcon && <div style={checkedIconStyle}>{checkedIcon}</div>}\n        {uncheckedIcon && <div style={uncheckedIconStyle}>{uncheckedIcon}</div>}\n      </div>\n      <div\n        className='react-switch-handle'\n        style={handleStyle}\n        onClick={(e) => e.preventDefault()}\n        onMouseDown={disabled ? null : $onMouseDown}\n        onTouchStart={disabled ? null : $onTouchStart}\n        onTouchMove={disabled ? null : $onTouchMove}\n        onTouchEnd={disabled ? null : $onTouchEnd}\n        onTouchCancel={disabled ? null : $unsetHasOutline}\n      >\n        {uncheckedHandleIcon && (\n          <div style={uncheckedHandleIconStyle}>{uncheckedHandleIcon}</div>\n        )}\n        {checkedHandleIcon && (\n          <div style={checkedHandleIconStyle}>{checkedHandleIcon}</div>\n        )}\n      </div>\n      <input\n        type='checkbox'\n        role='switch'\n        aria-checked={checked}\n        checked={checked}\n        disabled={disabled}\n        style={inputStyle}\n        {...rest}\n        /* anything below should NOT get overriden by ...rest */\n        ref={$inputRef}\n        onFocus={$setHasOutline}\n        onBlur={$unsetHasOutline}\n        onKeyUp={$onKeyUp}\n        onChange={$onInputChange}\n      />\n    </div>\n  )\n}\n\nReactSwitch.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  offColor: hexColorPropType,\n  onColor: hexColorPropType,\n  offHandleColor: hexColorPropType,\n  onHandleColor: hexColorPropType,\n  handleDiameter: PropTypes.number,\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  checkedIcon: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  boxShadow: PropTypes.string,\n  borderRadius: PropTypes.number,\n  activeBoxShadow: PropTypes.string,\n  uncheckedHandleIcon: PropTypes.element,\n  checkedHandleIcon: PropTypes.element,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  id: PropTypes.string,\n  className: PropTypes.string\n}\n\nReactSwitch.defaultProps = {\n  disabled: false,\n  offColor: '#888',\n  onColor: '#080',\n  offHandleColor: '#fff',\n  onHandleColor: '#fff',\n  uncheckedIcon: defaultUncheckedIcon,\n  checkedIcon: defaultCheckedIcon,\n  boxShadow: null,\n  activeBoxShadow: '0 0 2px 3px #3bf',\n  height: 28,\n  width: 56\n}\n\nexport default ReactSwitch\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useState, useCallback } from 'react';\n\nvar _excluded = [\"defaultInputValue\", \"defaultMenuIsOpen\", \"defaultValue\", \"inputValue\", \"menuIsOpen\", \"onChange\", \"onInputChange\", \"onMenuClose\", \"onMenuOpen\", \"value\"];\nfunction useStateManager(_ref) {\n  var _ref$defaultInputValu = _ref.defaultInputValue,\n    defaultInputValue = _ref$defaultInputValu === void 0 ? '' : _ref$defaultInputValu,\n    _ref$defaultMenuIsOpe = _ref.defaultMenuIsOpen,\n    defaultMenuIsOpen = _ref$defaultMenuIsOpe === void 0 ? false : _ref$defaultMenuIsOpe,\n    _ref$defaultValue = _ref.defaultValue,\n    defaultValue = _ref$defaultValue === void 0 ? null : _ref$defaultValue,\n    propsInputValue = _ref.inputValue,\n    propsMenuIsOpen = _ref.menuIsOpen,\n    propsOnChange = _ref.onChange,\n    propsOnInputChange = _ref.onInputChange,\n    propsOnMenuClose = _ref.onMenuClose,\n    propsOnMenuOpen = _ref.onMenuOpen,\n    propsValue = _ref.value,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(propsInputValue !== undefined ? propsInputValue : defaultInputValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateInputValue = _useState2[0],\n    setStateInputValue = _useState2[1];\n  var _useState3 = useState(propsMenuIsOpen !== undefined ? propsMenuIsOpen : defaultMenuIsOpen),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stateMenuIsOpen = _useState4[0],\n    setStateMenuIsOpen = _useState4[1];\n  var _useState5 = useState(propsValue !== undefined ? propsValue : defaultValue),\n    _useState6 = _slicedToArray(_useState5, 2),\n    stateValue = _useState6[0],\n    setStateValue = _useState6[1];\n  var onChange = useCallback(function (value, actionMeta) {\n    if (typeof propsOnChange === 'function') {\n      propsOnChange(value, actionMeta);\n    }\n    setStateValue(value);\n  }, [propsOnChange]);\n  var onInputChange = useCallback(function (value, actionMeta) {\n    var newValue;\n    if (typeof propsOnInputChange === 'function') {\n      newValue = propsOnInputChange(value, actionMeta);\n    }\n    setStateInputValue(newValue !== undefined ? newValue : value);\n  }, [propsOnInputChange]);\n  var onMenuOpen = useCallback(function () {\n    if (typeof propsOnMenuOpen === 'function') {\n      propsOnMenuOpen();\n    }\n    setStateMenuIsOpen(true);\n  }, [propsOnMenuOpen]);\n  var onMenuClose = useCallback(function () {\n    if (typeof propsOnMenuClose === 'function') {\n      propsOnMenuClose();\n    }\n    setStateMenuIsOpen(false);\n  }, [propsOnMenuClose]);\n  var inputValue = propsInputValue !== undefined ? propsInputValue : stateInputValue;\n  var menuIsOpen = propsMenuIsOpen !== undefined ? propsMenuIsOpen : stateMenuIsOpen;\n  var value = propsValue !== undefined ? propsValue : stateValue;\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen,\n    onChange: onChange,\n    onInputChange: onInputChange,\n    onMenuClose: onMenuClose,\n    onMenuOpen: onMenuOpen,\n    value: value\n  });\n}\n\nexport { useStateManager as u };\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, COMMENT, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n","import * as React from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || React.useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isBrowser = \"object\" !== 'undefined';\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nif (!isBrowser) {\n  withEmotionCache = function withEmotionCache(func) {\n    return function (props) {\n      var cache = useContext(EmotionCacheContext);\n\n      if (cache === null) {\n        // yes, we're potentially creating this on every render\n        // it doesn't actually matter though since it's only on the server\n        // so there will only every be a single render\n        // that could change in the future because of suspense and etc. but for now,\n        // this works and i don't want to optimise for a future thing that we aren't sure about\n        cache = createCache({\n          key: 'css'\n        });\n        return /*#__PURE__*/React.createElement(EmotionCacheContext.Provider, {\n          value: cache\n        }, func(props, cache));\n      } else {\n        return func(props, cache);\n      }\n    };\n  };\n}\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, isBrowser as i, useTheme as u, withEmotionCache as w };\n","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.3\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.3\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.2\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nexport { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useMemo } from 'react';\nimport { S as Select } from './Select-49a62830.esm.js';\nexport { c as createFilter, d as defaultTheme, m as mergeStyles } from './Select-49a62830.esm.js';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nexport { c as components } from './index-a301f526.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\n\nvar StateManagedSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var baseSelectProps = useStateManager(props);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, baseSelectProps));\n});\nvar StateManagedSelect$1 = StateManagedSelect;\n\nvar NonceProvider = (function (_ref) {\n  var nonce = _ref.nonce,\n    children = _ref.children,\n    cacheKey = _ref.cacheKey;\n  var emotionCache = useMemo(function () {\n    return createCache({\n      key: cacheKey,\n      nonce: nonce\n    });\n  }, [cacheKey, nonce]);\n  return /*#__PURE__*/React.createElement(CacheProvider, {\n    value: emotionCache\n  }, children);\n});\n\nexport { NonceProvider, StateManagedSelect$1 as default };\n","import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  TableOptions,\n  TableOptionsResolved,\n  RowData,\n  createTable,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> = React.ReactNode | React.ComponentType<TProps>\n\n//\n\n/**\n * If rendering headers, cells, or footers with custom markup, use flexRender instead of `cell.getValue()` or `cell.renderValue()`.\n */\nexport function flexRender<TProps extends object>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode | JSX.Element {\n  return !Comp ? null : isReactComponent<TProps>(Comp) ? (\n    <Comp {...props} />\n  ) : (\n    Comp\n  )\n}\n\nfunction isReactComponent<TProps>(\n  component: unknown\n): component is React.ComponentType<TProps> {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nexport function useReactTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  // Compose in the generic options to the user options\n  const resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...options,\n  }\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable<TData>(resolvedOptions),\n  }))\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return tableRef.current\n}\n","import { TableState, Updater } from './types'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\nexport type RequiredKeys<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<\n  T,\n  keyof U\n> &\n  U\n\nexport type UnionToIntersection<T> = (\n  T extends any ? (x: T) => any : never\n) extends (x: infer R) => any\n  ? R\n  : never\n\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\n\ntype ComputeRange<\n  N extends number,\n  Result extends Array<unknown> = [],\n> = Result['length'] extends N\n  ? Result\n  : ComputeRange<N, [...Result, Result['length']]>\ntype Index40 = ComputeRange<40>[number]\n\n// Is this type a tuple?\ntype IsTuple<T> = T extends readonly any[] & { length: infer Length }\n  ? Length extends Index40\n    ? T\n    : never\n  : never\n\n// If this type is a tuple, what indices are allowed?\ntype AllowedIndexes<\n  Tuple extends ReadonlyArray<any>,\n  Keys extends number = never,\n> = Tuple extends readonly []\n  ? Keys\n  : Tuple extends readonly [infer _, ...infer Tail]\n  ? AllowedIndexes<Tail, Keys | Tail['length']>\n  : Keys\n\nexport type DeepKeys<T, TDepth extends any[] = []> = TDepth['length'] extends 5\n  ? never\n  : unknown extends T\n  ? string\n  : object extends T\n  ? string\n  : T extends readonly any[] & IsTuple<T>\n  ? AllowedIndexes<T> | DeepKeysPrefix<T, AllowedIndexes<T>, TDepth>\n  : T extends any[]\n  ? DeepKeys<T[number], [...TDepth, any]>\n  : T extends Date\n  ? never\n  : T extends object\n  ? (keyof T & string) | DeepKeysPrefix<T, keyof T, TDepth>\n  : never\n\ntype DeepKeysPrefix<\n  T,\n  TPrefix,\n  TDepth extends any[],\n> = TPrefix extends keyof T & (number | string)\n  ? `${TPrefix}.${DeepKeys<T[TPrefix], [...TDepth, any]> & string}`\n  : never\n\nexport type DeepValue<T, TProp> = T extends Record<string | number, any>\n  ? TProp extends `${infer TBranch}.${infer TDeepProp}`\n    ? DeepValue<T[TBranch], TDeepProp>\n    : T[TProp & string]\n  : never\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport type Getter<TValue> = <TTValue = TValue>() => NoInfer<TTValue>\n\n///\n\nexport function functionalUpdate<T>(updater: Updater<T>, input: T): T {\n  return typeof updater === 'function'\n    ? (updater as (input: T) => T)(input)\n    : updater\n}\n\nexport function noop() {\n  //\n}\n\nexport function makeStateUpdater<K extends keyof TableState>(\n  key: K,\n  instance: unknown\n) {\n  return (updater: Updater<TableState[K]>) => {\n    ;(instance as any).setState(<TTableState>(old: TTableState) => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, (old as any)[key]),\n      }\n    })\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\nexport function isFunction<T extends AnyFunction>(d: any): d is T {\n  return d instanceof Function\n}\n\nexport function isNumberArray(d: any): d is number[] {\n  return Array.isArray(d) && d.every(val => typeof val === 'number')\n}\n\nexport function flattenBy<TNode>(\n  arr: TNode[],\n  getChildren: (item: TNode) => TNode[]\n) {\n  const flat: TNode[] = []\n\n  const recurse = (subArr: TNode[]) => {\n    subArr.forEach(item => {\n      flat.push(item)\n      const children = getChildren(item)\n      if (children?.length) {\n        recurse(children)\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  }\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug) {\n      if (opts?.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n        const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n        const resultFpsPercentage = resultEndTime / 16\n\n        const pad = (str: number | string, num: number) => {\n          str = String(str)\n          while (str.length < num) {\n            str = ' ' + str\n          }\n          return str\n        }\n\n        console.info(\n          `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n          `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120)\n            )}deg 100% 31%);`,\n          opts?.key\n        )\n      }\n    }\n\n    return result!\n  }\n}\n","import { RowData, Column, Header, HeaderGroup, Table } from '../types'\nimport { memo } from '../utils'\nimport { TableFeature } from './table'\n\nexport interface CoreHeaderGroup<TData extends RowData> {\n  depth: number\n  headers: Header<TData, unknown>[]\n  id: string\n}\n\nexport interface HeaderContext<TData, TValue> {\n  /**\n   * An instance of a column.\n   */\n  column: Column<TData, TValue>\n  /**\n   * An instance of a header.\n   */\n  header: Header<TData, TValue>\n  /**\n   * The table instance.\n   */\n  table: Table<TData>\n}\n\nexport interface CoreHeader<TData extends RowData, TValue> {\n  /**\n   * The col-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#colspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  colSpan: number\n  /**\n   * The header's associated column object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  column: Column<TData, TValue>\n  /**\n   * The depth of the header, zero-indexed based.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  depth: number\n  /**\n   * Returns the rendering context (or props) for column-based components like headers, footers and filters.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getContext: () => HeaderContext<TData, TValue>\n  /**\n   * Returns the leaf headers hierarchically nested under this header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * The header's associated header group object.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#headergroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  headerGroup: HeaderGroup<TData>\n  /**\n   * The unique identifier for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  id: string\n  /**\n   * The index for the header within the header group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  index: number\n  /**\n   * A boolean denoting if the header is a placeholder header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#isplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  isPlaceholder: boolean\n  /**\n   * If the header is a placeholder header, this will be a unique header ID that does not conflict with any other headers across the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#placeholderid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  placeholderId?: string\n  /**\n   * The row-span for the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#rowspan)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  rowSpan: number\n  /**\n   * The header's hierarchical sub/child headers. Will be empty if the header's associated column is a leaf-column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/header#subheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  subHeaders: Header<TData, TValue>[]\n}\n\nexport interface HeadersInstance<TData extends RowData> {\n  /**\n   * Returns all header groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterHeaderGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the header groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightheadergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightHeaderGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns the footer groups for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the left pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for columns that are not pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFooterGroups: () => HeaderGroup<TData>[]\n  /**\n   * If pinning, returns the footer groups for the right pinned columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightfootergroups)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFooterGroups: () => HeaderGroup<TData>[]\n\n  /**\n   * Returns headers for all columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterFlatHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned columns in the table, including parent headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightflatheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightFlatHeaders: () => Header<TData, unknown>[]\n\n  /**\n   * Returns headers for all leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all left pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getleftleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getLeftLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all columns that are not pinned, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getcenterleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getCenterLeafHeaders: () => Header<TData, unknown>[]\n  /**\n   * If pinning, returns headers for all right pinned leaf columns in the table, (not including parent headers).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/headers#getrightleafheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/headers)\n   */\n  getRightLeafHeaders: () => Header<TData, unknown>[]\n}\n\n//\n\nfunction createHeader<TData extends RowData, TValue>(\n  table: Table<TData>,\n  column: Column<TData, TValue>,\n  options: {\n    id?: string\n    isPlaceholder?: boolean\n    placeholderId?: string\n    index: number\n    depth: number\n  }\n): Header<TData, TValue> {\n  const id = options.id ?? column.id\n\n  let header: CoreHeader<TData, TValue> = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null!,\n    getLeafHeaders: (): Header<TData, unknown>[] => {\n      const leafHeaders: Header<TData, unknown>[] = []\n\n      const recurseHeader = (h: CoreHeader<TData, any>) => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader)\n        }\n        leafHeaders.push(h as Header<TData, unknown>)\n      }\n\n      recurseHeader(header)\n\n      return leafHeaders\n    },\n    getContext: () => ({\n      table,\n      header: header as Header<TData, TValue>,\n      column,\n    }),\n  }\n\n  table._features.forEach(feature => {\n    feature.createHeader?.(header, table)\n  })\n\n  return header as Header<TData, TValue>\n}\n\nexport const Headers: TableFeature = {\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    // Header Groups\n\n    table.getHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        const leftColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const rightColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        const centerColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n\n        const headerGroups = buildHeaderGroups(\n          allColumns,\n          [...leftColumns, ...centerColumns, ...rightColumns],\n          table\n        )\n\n        return headerGroups\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getHeaderGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getCenterHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, left, right) => {\n        leafColumns = leafColumns.filter(\n          column => !left?.includes(column.id) && !right?.includes(column.id)\n        )\n        return buildHeaderGroups(allColumns, leafColumns, table, 'center')\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getCenterHeaderGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getLeftHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.left,\n      ],\n      (allColumns, leafColumns, left) => {\n        const orderedLeafColumns =\n          left\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'left')\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeftHeaderGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getRightHeaderGroups = memo(\n      () => [\n        table.getAllColumns(),\n        table.getVisibleLeafColumns(),\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, leafColumns, right) => {\n        const orderedLeafColumns =\n          right\n            ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n            .filter(Boolean) ?? []\n\n        return buildHeaderGroups(allColumns, orderedLeafColumns, table, 'right')\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRightHeaderGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    // Footer Groups\n\n    table.getFooterGroups = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getFooterGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getLeftFooterGroups = memo(\n      () => [table.getLeftHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeftFooterGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getCenterFooterGroups = memo(\n      () => [table.getCenterHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getCenterFooterGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getRightFooterGroups = memo(\n      () => [table.getRightHeaderGroups()],\n      headerGroups => {\n        return [...headerGroups].reverse()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRightFooterGroups',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    // Flat Headers\n\n    table.getFlatHeaders = memo(\n      () => [table.getHeaderGroups()],\n      headerGroups => {\n        return headerGroups\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getFlatHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getLeftFlatHeaders = memo(\n      () => [table.getLeftHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeftFlatHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getCenterFlatHeaders = memo(\n      () => [table.getCenterHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getCenterFlatHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getRightFlatHeaders = memo(\n      () => [table.getRightHeaderGroups()],\n      left => {\n        return left\n          .map(headerGroup => {\n            return headerGroup.headers\n          })\n          .flat()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRightFlatHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    // Leaf Headers\n\n    table.getCenterLeafHeaders = memo(\n      () => [table.getCenterFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getCenterLeafHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getLeftLeafHeaders = memo(\n      () => [table.getLeftFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeftLeafHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getRightLeafHeaders = memo(\n      () => [table.getRightFlatHeaders()],\n      flatHeaders => {\n        return flatHeaders.filter(header => !header.subHeaders?.length)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRightLeafHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n\n    table.getLeafHeaders = memo(\n      () => [\n        table.getLeftHeaderGroups(),\n        table.getCenterHeaderGroups(),\n        table.getRightHeaderGroups(),\n      ],\n      (left, center, right) => {\n        return [\n          ...(left[0]?.headers ?? []),\n          ...(center[0]?.headers ?? []),\n          ...(right[0]?.headers ?? []),\n        ]\n          .map(header => {\n            return header.getLeafHeaders()\n          })\n          .flat()\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeafHeaders',\n        debug: () => table.options.debugAll ?? table.options.debugHeaders,\n      }\n    )\n  },\n}\n\nexport function buildHeaderGroups<TData extends RowData>(\n  allColumns: Column<TData, unknown>[],\n  columnsToGroup: Column<TData, unknown>[],\n  table: Table<TData>,\n  headerFamily?: 'center' | 'left' | 'right'\n) {\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0\n\n  const findMaxDepth = (columns: Column<TData, unknown>[], depth = 1) => {\n    maxDepth = Math.max(maxDepth, depth)\n\n    columns\n      .filter(column => column.getIsVisible())\n      .forEach(column => {\n        if (column.columns?.length) {\n          findMaxDepth(column.columns, depth + 1)\n        }\n      }, 0)\n  }\n\n  findMaxDepth(allColumns)\n\n  let headerGroups: HeaderGroup<TData>[] = []\n\n  const createHeaderGroup = (\n    headersToGroup: Header<TData, unknown>[],\n    depth: number\n  ) => {\n    // The header group we are creating\n    const headerGroup: HeaderGroup<TData> = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders: Header<TData, unknown>[] = []\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0]\n\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth\n\n      let column: Column<TData, unknown>\n      let isPlaceholder = false\n\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column\n        isPlaceholder = true\n      }\n\n      if (\n        latestPendingParentHeader &&\n        latestPendingParentHeader?.column === column\n      ) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup)\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup?.id]\n            .filter(Boolean)\n            .join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder\n            ? `${pendingParentHeaders.filter(d => d.column === column).length}`\n            : undefined,\n          depth,\n          index: pendingParentHeaders.length,\n        })\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup)\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header)\n      }\n\n      headerGroup.headers.push(headerToGroup)\n      headerToGroup.headerGroup = headerGroup\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1)\n    }\n  }\n\n  const bottomHeaders = columnsToGroup.map((column, index) =>\n    createHeader(table, column, {\n      depth: maxDepth,\n      index,\n    })\n  )\n\n  createHeaderGroup(bottomHeaders, maxDepth - 1)\n\n  headerGroups.reverse()\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = (\n    headers: Header<TData, unknown>[]\n  ): { colSpan: number; rowSpan: number }[] => {\n    const filteredHeaders = headers.filter(header =>\n      header.column.getIsVisible()\n    )\n\n    return filteredHeaders.map(header => {\n      let colSpan = 0\n      let rowSpan = 0\n      let childRowSpans = [0]\n\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = []\n\n        recurseHeadersForSpans(header.subHeaders).forEach(\n          ({ colSpan: childColSpan, rowSpan: childRowSpan }) => {\n            colSpan += childColSpan\n            childRowSpans.push(childRowSpan)\n          }\n        )\n      } else {\n        colSpan = 1\n      }\n\n      const minChildRowSpan = Math.min(...childRowSpans)\n      rowSpan = rowSpan + minChildRowSpan\n\n      header.colSpan = colSpan\n      header.rowSpan = rowSpan\n\n      return { colSpan, rowSpan }\n    })\n  }\n\n  recurseHeadersForSpans(headerGroups[0]?.headers ?? [])\n\n  return headerGroups\n}\n","import { TableFeature } from '../core/table'\nimport { RowData, Column, Header, OnChangeFn, Table, Updater } from '../types'\nimport { makeStateUpdater } from '../utils'\nimport { ColumnPinningPosition } from './Pinning'\n\n//\n\nexport interface ColumnSizingTableState {\n  columnSizing: ColumnSizingState\n  columnSizingInfo: ColumnSizingInfoState\n}\n\nexport type ColumnSizingState = Record<string, number>\n\nexport interface ColumnSizingInfoState {\n  columnSizingStart: [string, number][]\n  deltaOffset: null | number\n  deltaPercentage: null | number\n  isResizingColumn: false | string\n  startOffset: null | number\n  startSize: null | number\n}\n\nexport type ColumnResizeMode = 'onChange' | 'onEnd'\n\nexport type ColumnResizeDirection = 'ltr' | 'rtl'\n\nexport interface ColumnSizingOptions {\n  /**\n   * Determines when the columnSizing state is updated. `onChange` updates the state when the user is dragging the resize handle. `onEnd` updates the state when the user releases the resize handle.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#columnresizemode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeMode?: ColumnResizeMode\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enablecolumnresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableColumnResizing?: boolean\n  /**\n   * Enables or disables right-to-left support for resizing the column. defaults to 'ltr'.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#rtl)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  columnResizeDirection?: ColumnResizeDirection\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizing` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizing` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingChange?: OnChangeFn<ColumnSizingState>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnSizingInfo` changes. This overrides the default internal state management, so you will also need to supply `state.columnSizingInfo` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#oncolumnsizinginfochange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  onColumnSizingInfoChange?: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport type ColumnSizingDefaultOptions = Pick<\n  ColumnSizingOptions,\n  'columnResizeMode' | 'onColumnSizingChange' | 'onColumnSizingInfoChange' | 'columnResizeDirection'\n>\n\nexport interface ColumnSizingInstance {\n  /**\n   * If pinning, returns the total size of the center portion of the table by calculating the sum of the sizes of all unpinned/center leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcentertotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCenterTotalSize: () => number\n  /**\n   * Returns the total size of the left portion of the table by calculating the sum of the sizes of all left leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getlefttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getLeftTotalSize: () => number\n  /**\n   * Returns the total size of the right portion of the table by calculating the sum of the sizes of all right leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getrighttotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getRightTotalSize: () => number\n  /**\n   * Returns the total size of the table by calculating the sum of the sizes of all leaf-columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#gettotalsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getTotalSize: () => number\n  /**\n   * Resets column sizing to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetColumnSizing: (defaultState?: boolean) => void\n  /**\n   * Resets column sizing info to its initial state. If `defaultState` is `true`, the default state for the table will be used instead of the initialValue provided to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetheadersizeinfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetHeaderSizeInfo: (defaultState?: boolean) => void\n  /**\n   * Sets the column sizing state using an updater function or a value. This will trigger the underlying `onColumnSizingChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizing: (updater: Updater<ColumnSizingState>) => void\n  /**\n   * Sets the column sizing info state using an updater function or a value. This will trigger the underlying `onColumnSizingInfoChange` function if one is passed to the table options, otherwise the state will be managed automatically by the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#setcolumnsizinginfo)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void\n}\n\nexport interface ColumnSizingColumnDef {\n  /**\n   * Enables or disables column resizing for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#enableresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  enableResizing?: boolean\n  /**\n   * The maximum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#maxsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  maxSize?: number\n  /**\n   * The minimum allowed size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#minsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  minSize?: number\n  /**\n   * The desired size for the column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#size)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  size?: number\n}\n\nexport interface ColumnSizingColumn {\n  /**\n   * Returns `true` if the column can be resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getcanresize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getCanResize: () => boolean\n  /**\n   * Returns `true` if the column is currently being resized.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getisresizing)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getIsResizing: () => boolean\n  /**\n   * Returns the current size of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition) => number\n  /**\n   * Resets the column to its initial size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#resetsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  resetSize: () => void\n}\n\nexport interface ColumnSizingHeader {\n  /**\n   * Returns an event handler function that can be used to resize the header. It can be used as an:\n   * - `onMouseDown` handler\n   * - `onTouchStart` handler\n   *\n   * The dragging and release events are automatically handled for you.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getresizehandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getResizeHandler: () => (event: unknown) => void\n  /**\n   * Returns the current size of the header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getsize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getSize: () => number\n  /**\n   * Returns the offset measurement along the row-axis (usually the x-axis for standard tables) for the header. This is effectively a sum of the offset measurements of all preceding headers.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-sizing#getstart)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-sizing)\n   */\n  getStart: (position?: ColumnPinningPosition) => number\n}\n\n//\n\nexport const defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER,\n}\n\nconst getDefaultColumnSizingInfoState = (): ColumnSizingInfoState => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: [],\n})\n\nexport const ColumnSizing: TableFeature = {\n  getDefaultColumnDef: (): ColumnSizingColumnDef => {\n    return defaultColumnSizing\n  },\n  getInitialState: (state): ColumnSizingTableState => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingDefaultOptions => {\n    return {\n      columnResizeMode: 'onEnd',\n      columnResizeDirection: 'ltr',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getSize = () => {\n      const columnSize = table.getState().columnSizing[column.id]\n\n      return Math.min(\n        Math.max(\n          column.columnDef.minSize ?? defaultColumnSizing.minSize,\n          columnSize ?? column.columnDef.size ?? defaultColumnSizing.size\n        ),\n        column.columnDef.maxSize ?? defaultColumnSizing.maxSize\n      )\n    }\n    column.getStart = position => {\n      const columns = !position\n        ? table.getVisibleLeafColumns()\n        : position === 'left'\n        ? table.getLeftVisibleLeafColumns()\n        : table.getRightVisibleLeafColumns()\n\n      const index = columns.findIndex(d => d.id === column.id)\n\n      if (index > 0) {\n        const prevSiblingColumn = columns[index - 1]!\n\n        return (\n          prevSiblingColumn.getStart(position) + prevSiblingColumn.getSize()\n        )\n      }\n\n      return 0\n    }\n    column.resetSize = () => {\n      table.setColumnSizing(({ [column.id]: _, ...rest }) => {\n        return rest\n      })\n    }\n    column.getCanResize = () => {\n      return (\n        (column.columnDef.enableResizing ?? true) &&\n        (table.options.enableColumnResizing ?? true)\n      )\n    }\n    column.getIsResizing = () => {\n      return table.getState().columnSizingInfo.isResizingColumn === column.id\n    }\n  },\n\n  createHeader: <TData extends RowData, TValue>(\n    header: Header<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    header.getSize = () => {\n      let sum = 0\n\n      const recurse = (header: Header<TData, TValue>) => {\n        if (header.subHeaders.length) {\n          header.subHeaders.forEach(recurse)\n        } else {\n          sum += header.column.getSize() ?? 0\n        }\n      }\n\n      recurse(header)\n\n      return sum\n    }\n    header.getStart = () => {\n      if (header.index > 0) {\n        const prevSiblingHeader = header.headerGroup.headers[header.index - 1]!\n        return prevSiblingHeader.getStart() + prevSiblingHeader.getSize()\n      }\n\n      return 0\n    }\n    header.getResizeHandler = () => {\n      const column = table.getColumn(header.column.id)\n      const canResize = column?.getCanResize()\n\n      return (e: unknown) => {\n        if (!column || !canResize) {\n          return\n        }\n\n        ;(e as any).persist?.()\n\n        if (isTouchStartEvent(e)) {\n          // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n          if (e.touches && e.touches.length > 1) {\n            return\n          }\n        }\n\n        const startSize = header.getSize()\n\n        const columnSizingStart: [string, number][] = header\n          ? header.getLeafHeaders().map(d => [d.column.id, d.column.getSize()])\n          : [[column.id, column.getSize()]]\n\n        const clientX = isTouchStartEvent(e)\n          ? Math.round(e.touches[0]!.clientX)\n          : (e as MouseEvent).clientX\n\n        const newColumnSizing: ColumnSizingState = {}\n\n        const updateOffset = (\n          eventType: 'move' | 'end',\n          clientXPos?: number\n        ) => {\n          if (typeof clientXPos !== 'number') {\n            return\n          }\n\n          table.setColumnSizingInfo(old => {\n            const deltaDirection = table.options.columnResizeDirection === 'rtl' ? -1 : 1\n            const deltaOffset = (clientXPos - (old?.startOffset ?? 0)) * deltaDirection\n            const deltaPercentage = Math.max(\n              deltaOffset / (old?.startSize ?? 0),\n              -0.999999\n            )\n\n            old.columnSizingStart.forEach(([columnId, headerSize]) => {\n              newColumnSizing[columnId] =\n                Math.round(\n                  Math.max(headerSize + headerSize * deltaPercentage, 0) * 100\n                ) / 100\n            })\n\n            return {\n              ...old,\n              deltaOffset,\n              deltaPercentage,\n            }\n          })\n\n          if (\n            table.options.columnResizeMode === 'onChange' ||\n            eventType === 'end'\n          ) {\n            table.setColumnSizing(old => ({\n              ...old,\n              ...newColumnSizing,\n            }))\n          }\n        }\n\n        const onMove = (clientXPos?: number) => updateOffset('move', clientXPos)\n\n        const onEnd = (clientXPos?: number) => {\n          updateOffset('end', clientXPos)\n\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            isResizingColumn: false,\n            startOffset: null,\n            startSize: null,\n            deltaOffset: null,\n            deltaPercentage: null,\n            columnSizingStart: [],\n          }))\n        }\n\n        const mouseEvents = {\n          moveHandler: (e: MouseEvent) => onMove(e.clientX),\n          upHandler: (e: MouseEvent) => {\n            document.removeEventListener('mousemove', mouseEvents.moveHandler)\n            document.removeEventListener('mouseup', mouseEvents.upHandler)\n            onEnd(e.clientX)\n          },\n        }\n\n        const touchEvents = {\n          moveHandler: (e: TouchEvent) => {\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onMove(e.touches[0]!.clientX)\n            return false\n          },\n          upHandler: (e: TouchEvent) => {\n            document.removeEventListener('touchmove', touchEvents.moveHandler)\n            document.removeEventListener('touchend', touchEvents.upHandler)\n            if (e.cancelable) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n            onEnd(e.touches[0]?.clientX)\n          },\n        }\n\n        const passiveIfSupported = passiveEventSupported()\n          ? { passive: false }\n          : false\n\n        if (isTouchStartEvent(e)) {\n          document.addEventListener(\n            'touchmove',\n            touchEvents.moveHandler,\n            passiveIfSupported\n          )\n          document.addEventListener(\n            'touchend',\n            touchEvents.upHandler,\n            passiveIfSupported\n          )\n        } else {\n          document.addEventListener(\n            'mousemove',\n            mouseEvents.moveHandler,\n            passiveIfSupported\n          )\n          document.addEventListener(\n            'mouseup',\n            mouseEvents.upHandler,\n            passiveIfSupported\n          )\n        }\n\n        table.setColumnSizingInfo(old => ({\n          ...old,\n          startOffset: clientX,\n          startSize,\n          deltaOffset: 0,\n          deltaPercentage: 0,\n          columnSizingStart,\n          isResizingColumn: column.id,\n        }))\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnSizing = updater =>\n      table.options.onColumnSizingChange?.(updater)\n    table.setColumnSizingInfo = updater =>\n      table.options.onColumnSizingInfoChange?.(updater)\n    table.resetColumnSizing = defaultState => {\n      table.setColumnSizing(\n        defaultState ? {} : table.initialState.columnSizing ?? {}\n      )\n    }\n    table.resetHeaderSizeInfo = defaultState => {\n      table.setColumnSizingInfo(\n        defaultState\n          ? getDefaultColumnSizingInfoState()\n          : table.initialState.columnSizingInfo ??\n              getDefaultColumnSizingInfoState()\n      )\n    }\n    table.getTotalSize = () =>\n      table.getHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getLeftTotalSize = () =>\n      table.getLeftHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getCenterTotalSize = () =>\n      table.getCenterHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n    table.getRightTotalSize = () =>\n      table.getRightHeaderGroups()[0]?.headers.reduce((sum, header) => {\n        return sum + header.getSize()\n      }, 0) ?? 0\n  },\n}\n\nlet passiveSupported: boolean | null = null\nexport function passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    const noop = () => {}\n\n    window.addEventListener('test', noop, options)\n    window.removeEventListener('test', noop)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\nfunction isTouchStartEvent(e: unknown): e is TouchEvent {\n  return (e as TouchEvent).type === 'touchstart'\n}\n","import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, Row, Updater, RowData } from '../types'\nimport { makeStateUpdater } from '../utils'\n\nexport type ExpandedStateList = Record<string, boolean>\nexport type ExpandedState = true | Record<string, boolean>\nexport interface ExpandedTableState {\n  expanded: ExpandedState\n}\n\nexport interface ExpandedRow {\n  /**\n   * Returns whether the row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanExpand: () => boolean\n  /**\n   * Returns whether all parent rows of the row are expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallparentsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllParentsExpanded: () => boolean\n  /**\n   * Returns whether the row is expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsExpanded: () => boolean\n  /**\n   * Returns a function that can be used to toggle the expanded state of the row. This function can be used to bind to an event handler to a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleExpandedHandler: () => () => void\n  /**\n   * Toggles the expanded state (or sets it if `expanded` is provided) for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleExpanded: (expanded?: boolean) => void\n}\n\nexport interface ExpandedOptions<TData extends RowData> {\n  /**\n   * Enable this setting to automatically reset the expanded state of the table when expanding state changes.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#autoresetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  autoResetExpanded?: boolean\n  /**\n   * Enable/disable expanding for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#enableexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  enableExpanding?: boolean\n  /**\n   * This function is responsible for returning the expanded row model. If this function is not provided, the table will not expand rows. You can use the default exported `getExpandedRowModel` function to get the expanded row model or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row is currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisrowexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsRowExpanded?: (row: Row<TData>) => boolean\n  /**\n   * If provided, allows you to override the default behavior of determining whether a row can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getrowcanexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getRowCanExpand?: (row: Row<TData>) => boolean\n  /**\n   * Enables manual row expansion. If this is set to `true`, `getExpandedRowModel` will not be used to expand rows and you would be expected to perform the expansion in your own data model. This is useful if you are doing server-side expansion.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#manualexpanding)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  manualExpanding?: boolean\n  /**\n   * This function is called when the `expanded` table state changes. If a function is provided, you will be responsible for managing this state on your own. To pass the managed state back to the table, use the `tableOptions.state.expanded` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#onexpandedchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  onExpandedChange?: OnChangeFn<ExpandedState>\n  /**\n   * If `true` expanded rows will be paginated along with the rest of the table (which means expanded rows may span multiple pages). If `false` expanded rows will not be considered for pagination (which means expanded rows will always render on their parents page. This also means more rows will be rendered than the set page size)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#paginateexpandedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  paginateExpandedRows?: boolean\n}\n\nexport interface ExpandedInstance<TData extends RowData> {\n  _autoResetExpanded: () => void\n  _getExpandedRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether there are any rows that can be expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getcansomerowsexpand)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getCanSomeRowsExpand: () => boolean\n  /**\n   * Returns the maximum depth of the expanded rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandeddepth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedDepth: () => number\n  /**\n   * Returns the row model after expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether all rows are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getisallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsAllRowsExpanded: () => boolean\n  /**\n   * Returns whether there are any rows that are currently expanded.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getissomerowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getIsSomeRowsExpanded: () => boolean\n  /**\n   * Returns the row model before expansion has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#getpreexpandedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getPreExpandedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle the expanded state of all rows. This handler is meant to be used with an `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#gettoggleallrowsexpandedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  getToggleAllRowsExpandedHandler: () => (event: unknown) => void\n  /**\n   * Resets the expanded state of the table to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#resetexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  resetExpanded: (defaultState?: boolean) => void\n  /**\n   * Updates the expanded state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#setexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  setExpanded: (updater: Updater<ExpandedState>) => void\n  /**\n   * Toggles the expanded state for all rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/expanding#toggleallrowsexpanded)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/expanding)\n   */\n  toggleAllRowsExpanded: (expanded?: boolean) => void\n}\n\n//\n\nexport const Expanding: TableFeature = {\n  getInitialState: (state): ExpandedTableState => {\n    return {\n      expanded: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedOptions<TData> => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetExpanded = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetExpanded ??\n        !table.options.manualExpanding\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetExpanded()\n          queued = false\n        })\n      }\n    }\n    table.setExpanded = updater => table.options.onExpandedChange?.(updater)\n    table.toggleAllRowsExpanded = expanded => {\n      if (expanded ?? !table.getIsAllRowsExpanded()) {\n        table.setExpanded(true)\n      } else {\n        table.setExpanded({})\n      }\n    }\n    table.resetExpanded = defaultState => {\n      table.setExpanded(defaultState ? {} : table.initialState?.expanded ?? {})\n    }\n    table.getCanSomeRowsExpand = () => {\n      return table\n        .getPrePaginationRowModel()\n        .flatRows.some(row => row.getCanExpand())\n    }\n    table.getToggleAllRowsExpandedHandler = () => {\n      return (e: unknown) => {\n        ;(e as any).persist?.()\n        table.toggleAllRowsExpanded()\n      }\n    }\n    table.getIsSomeRowsExpanded = () => {\n      const expanded = table.getState().expanded\n      return expanded === true || Object.values(expanded).some(Boolean)\n    }\n    table.getIsAllRowsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      // If expanded is true, save some cycles and return true\n      if (typeof expanded === 'boolean') {\n        return expanded === true\n      }\n\n      if (!Object.keys(expanded).length) {\n        return false\n      }\n\n      // If any row is not expanded, return false\n      if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n        return false\n      }\n\n      // They must all be expanded :shrug:\n      return true\n    }\n    table.getExpandedDepth = () => {\n      let maxDepth = 0\n\n      const rowIds =\n        table.getState().expanded === true\n          ? Object.keys(table.getRowModel().rowsById)\n          : Object.keys(table.getState().expanded)\n\n      rowIds.forEach(id => {\n        const splitId = id.split('.')\n        maxDepth = Math.max(maxDepth, splitId.length)\n      })\n\n      return maxDepth\n    }\n    table.getPreExpandedRowModel = () => table.getSortedRowModel()\n    table.getExpandedRowModel = () => {\n      if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n        table._getExpandedRowModel = table.options.getExpandedRowModel(table)\n      }\n\n      if (table.options.manualExpanding || !table._getExpandedRowModel) {\n        return table.getPreExpandedRowModel()\n      }\n\n      return table._getExpandedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleExpanded = expanded => {\n      table.setExpanded(old => {\n        const exists = old === true ? true : !!old?.[row.id]\n\n        let oldExpanded: ExpandedStateList = {}\n\n        if (old === true) {\n          Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n            oldExpanded[rowId] = true\n          })\n        } else {\n          oldExpanded = old\n        }\n\n        expanded = expanded ?? !exists\n\n        if (!exists && expanded) {\n          return {\n            ...oldExpanded,\n            [row.id]: true,\n          }\n        }\n\n        if (exists && !expanded) {\n          const { [row.id]: _, ...rest } = oldExpanded\n          return rest\n        }\n\n        return old\n      })\n    }\n    row.getIsExpanded = () => {\n      const expanded = table.getState().expanded\n\n      return !!(\n        table.options.getIsRowExpanded?.(row) ??\n        (expanded === true || expanded?.[row.id])\n      )\n    }\n    row.getCanExpand = () => {\n      return (\n        table.options.getRowCanExpand?.(row) ??\n        ((table.options.enableExpanding ?? true) && !!row.subRows?.length)\n      )\n    }\n    row.getIsAllParentsExpanded = () => {\n      let isFullyExpanded = true\n      let currentRow = row\n\n      while (isFullyExpanded && currentRow.parentId) {\n        currentRow = table.getRow(currentRow.parentId, true)\n        isFullyExpanded = currentRow.getIsExpanded()\n      }\n\n      return isFullyExpanded\n    }\n    row.getToggleExpandedHandler = () => {\n      const canExpand = row.getCanExpand()\n\n      return () => {\n        if (!canExpand) return\n        row.toggleExpanded()\n      }\n    }\n  },\n}\n","import { FilterFn } from './features/Filters'\n\nconst includesString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  const search = filterValue.toLowerCase()\n  return Boolean(\n    row\n      .getValue<string | null>(columnId)\n      ?.toString()\n      ?.toLowerCase()\n      ?.includes(search)\n  )\n}\n\nincludesString.autoRemove = (val: any) => testFalsey(val)\n\nconst includesStringSensitive: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return Boolean(\n    row.getValue<string | null>(columnId)?.toString()?.includes(filterValue)\n  )\n}\n\nincludesStringSensitive.autoRemove = (val: any) => testFalsey(val)\n\nconst equalsString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return (\n    row.getValue<string | null>(columnId)?.toString()?.toLowerCase() ===\n    filterValue?.toLowerCase()\n  )\n}\n\nequalsString.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludes: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue<unknown[]>(columnId)?.includes(filterValue)\n}\n\narrIncludes.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesAll: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return !filterValue.some(\n    val => !row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesSome: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return filterValue.some(\n    val => row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst equals: FilterFn<any> = (row, columnId: string, filterValue: unknown) => {\n  return row.getValue(columnId) === filterValue\n}\n\nequals.autoRemove = (val: any) => testFalsey(val)\n\nconst weakEquals: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue(columnId) == filterValue\n}\n\nweakEquals.autoRemove = (val: any) => testFalsey(val)\n\nconst inNumberRange: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: [number, number]\n) => {\n  let [min, max] = filterValue\n\n  const rowValue = row.getValue<number>(columnId)\n  return rowValue >= min && rowValue <= max\n}\n\ninNumberRange.resolveFilterValue = (val: [any, any]) => {\n  let [unsafeMin, unsafeMax] = val\n\n  let parsedMin =\n    typeof unsafeMin !== 'number' ? parseFloat(unsafeMin as string) : unsafeMin\n  let parsedMax =\n    typeof unsafeMax !== 'number' ? parseFloat(unsafeMax as string) : unsafeMax\n\n  let min =\n    unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return [min, max] as const\n}\n\ninNumberRange.autoRemove = (val: any) =>\n  testFalsey(val) || (testFalsey(val[0]) && testFalsey(val[1]))\n\n// Export\n\nexport const filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange,\n}\n\nexport type BuiltInFilterFn = keyof typeof filterFns\n\n// Utils\n\nfunction testFalsey(val: any) {\n  return val === undefined || val === null || val === ''\n}\n","import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  FilterMeta,\n  FilterFns,\n} from '../types'\nimport { functionalUpdate, isFunction, makeStateUpdater } from '../utils'\n\nexport interface FiltersTableState {\n  columnFilters: ColumnFiltersState\n  globalFilter: any\n}\n\nexport type ColumnFiltersState = ColumnFilter[]\n\nexport interface ColumnFilter {\n  id: string\n  value: unknown\n}\n\nexport interface ResolvedColumnFilter<TData extends RowData> {\n  id: string\n  resolvedValue: unknown\n  filterFn: FilterFn<TData>\n}\n\nexport interface FilterFn<TData extends RowData> {\n  (\n    row: Row<TData>,\n    columnId: string,\n    filterValue: any,\n    addMeta: (meta: FilterMeta) => void\n  ): boolean\n\n  resolveFilterValue?: TransformFilterValueFn<TData>\n  autoRemove?: ColumnFilterAutoRemoveTestFn<TData>\n}\n\nexport type TransformFilterValueFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => unknown\n\nexport type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => boolean\n\nexport type CustomFilterFns<TData extends RowData> = Record<\n  string,\n  FilterFn<TData>\n>\n\nexport type FilterFnOption<TData extends RowData> =\n  | 'auto'\n  | BuiltInFilterFn\n  | keyof FilterFns\n  | FilterFn<TData>\n\nexport interface FiltersColumnDef<TData extends RowData> {\n  /**\n   * The filter function to use with this column. Can be the name of a built-in filter function or a custom filter function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#filterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  filterFn?: FilterFnOption<TData>\n  /**\n   * Enables/disables the **column** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#enablecolumnfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  enableColumnFilter?: boolean\n  /**\n   * Enables/disables the **global** filter for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  enableGlobalFilter?: boolean\n}\n\nexport interface FiltersColumn<TData extends RowData> {\n  _getFacetedMinMaxValues?: () => undefined | [number, number]\n  _getFacetedRowModel?: () => RowModel<TData>\n  _getFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * Returns an automatically calculated filter function for the column based off of the columns first known value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be **column** filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getcanfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getCanFilter: () => boolean\n  /**\n   * Returns whether or not the column can be **globally** filtered. Set to `false` to disable a column from being scanned during global filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getcanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getCanGlobalFilter: () => boolean\n  /**\n   * A function that **computes and returns** a min/max tuple derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedMinMaxValues` function to `options.getFacetedMinMaxValues`. A default implementation is provided via the exported `getFacetedMinMaxValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfacetedminmaxvalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model with all other column filters applied, excluding its own filter. Useful for displaying faceted result counts.\n   * > ⚠️ Requires that you pass a valid `getFacetedRowModel` function to `options.facetedRowModel`. A default implementation is provided via the exported `getFacetedRowModel` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFacetedRowModel: () => RowModel<TData>\n  /**\n   * A function that **computes and returns** a `Map` of unique values and their occurrences derived from `column.getFacetedRowModel`. Useful for displaying faceted result values.\n   * > ⚠️ Requires that you pass a valid `getFacetedUniqueValues` function to `options.getFacetedUniqueValues`. A default implementation is provided via the exported `getFacetedUniqueValues` function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFacetedUniqueValues: () => Map<any, number>\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the columnId specified.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the index (including `-1`) of the column filter in the table's `state.columnFilters` array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfilterindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFilterIndex: () => number\n  /**\n   * Returns the current filter value for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFilterValue: () => unknown\n  /**\n   * Returns whether or not the column is currently filtered.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getisfiltered)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getIsFiltered: () => boolean\n  /**\n   * A function that sets the current filter value for the column. You can pass it a value or an updater function for immutability-safe operations on existing values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#setfiltervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  setFilterValue: (updater: Updater<any>) => void\n}\n\nexport interface FiltersRow<TData extends RowData> {\n  /**\n   * The column filters map for the row. This object tracks whether a row is passing/failing specific filters by their column ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#columnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  columnFilters: Record<string, boolean>\n  /**\n   * The column filters meta map for the row. This object tracks any filter meta for a row as optionally provided during the filtering process.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#columnfiltersmeta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  columnFiltersMeta: Record<string, FilterMeta>\n}\n\ninterface FiltersOptionsBase<TData extends RowData> {\n  /**\n   * Enables/disables all filtering for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#enablefilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  enableFilters?: boolean\n  /**\n   * By default, filtering is done from parent rows down (so if a parent row is filtered out, all of its children will be filtered out as well). Setting this option to `true` will cause filtering to be done from leaf rows up (which means parent rows will be included so long as one of their child or grand-child rows is also included).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#filterfromleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  filterFromLeafRows?: boolean\n  /**\n   * If provided, this function is called **once** per table and should return a **new function** which will calculate and return the row model for the table when it's filtered.\n   * - For server-side filtering, this function is unnecessary and can be ignored since the server should already return the filtered row model.\n   * - For client-side filtering, this function is required. A default implementation is provided via any table adapter's `{ getFilteredRowModel }` export.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFilteredRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Disables the `getFilteredRowModel` from being used to filter data. This may be useful if your table needs to dynamically support both client-side and server-side filtering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#manualfiltering)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  manualFiltering?: boolean\n  /**\n   * By default, filtering is done for all rows (max depth of 100), no matter if they are root level parent rows or the child leaf rows of a parent row. Setting this option to `0` will cause filtering to only be applied to the root level parent rows, with all sub-rows remaining unfiltered. Similarly, setting this option to `1` will cause filtering to only be applied to child leaf rows 1 level deep, and so on.\n\n   * This is useful for situations where you want a row's entire child hierarchy to be visible regardless of the applied filter.\n    * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#maxleafrowfilterdepth)\n    * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  maxLeafRowFilterDepth?: number\n\n  // Column\n  /**\n   * Enables/disables **column** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#enablecolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  enableColumnFilters?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnFilters` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#oncolumnfilterschange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  onColumnFiltersChange?: OnChangeFn<ColumnFiltersState>\n\n  // Global\n  /**\n   * Enables/disables **global** filtering for all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#enableglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  enableGlobalFilter?: boolean\n  /**\n   * If provided, this function will be called with the column and should return `true` or `false` to indicate whether this column should be used for global filtering.\n   * \n   * This is useful if the column can contain data that is not `string` or `number` (i.e. `undefined`).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getcolumncanglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getColumnCanGlobalFilter?: (column: Column<TData, unknown>) => boolean\n  /**\n   * The filter function to use for global filtering.\n   * - A `string` referencing a built-in filter function\n   * - A `string` that references a custom filter functions provided via the `tableOptions.filterFns` option\n   * - A custom filter function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#globalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  globalFilterFn?: FilterFnOption<TData>\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.globalFilter` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#onglobalfilterchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  onGlobalFilterChange?: OnChangeFn<any>\n\n  // Faceting\n  getFacetedRowModel?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => RowModel<TData>\n  getFacetedUniqueValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => Map<any, number>\n  getFacetedMinMaxValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => undefined | [number, number]\n}\n\ntype ResolvedFilterFns = keyof FilterFns extends never\n  ? {\n      filterFns?: Record<string, FilterFn<any>>\n    }\n  : {\n      filterFns: Record<keyof FilterFns, FilterFn<any>>\n    }\n\nexport interface FiltersOptions<TData extends RowData>\n  extends FiltersOptionsBase<TData>,\n    ResolvedFilterFns {}\n\nexport interface FiltersInstance<TData extends RowData> {\n  /**\n   * Sets or updates the `state.columnFilters` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#setcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  setColumnFilters: (updater: Updater<ColumnFiltersState>) => void\n  /**\n   * Resets the **columnFilters** state to `initialState.columnFilters`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#resetcolumnfilters)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  resetColumnFilters: (defaultState?: boolean) => void\n\n  // Column Filters\n  _getFilteredRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getfilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getFilteredRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any **column** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getprefilteredrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getPreFilteredRowModel: () => RowModel<TData>\n\n  // Global Filters\n  _getGlobalFacetedMinMaxValues?: () => undefined | [number, number]\n  _getGlobalFacetedRowModel?: () => RowModel<TData>\n  _getGlobalFacetedUniqueValues?: () => Map<any, number>\n  /**\n   * Currently, this function returns the built-in `includesString` filter function. In future releases, it may return more dynamic filter functions based on the nature of the data provided.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getglobalautofilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getGlobalAutoFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Returns the faceted min and max values for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getglobalfacetedminmaxvalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getGlobalFacetedMinMaxValues: () => undefined | [number, number]\n  /**\n   * Returns the row model for the table after **global** filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getglobalfacetedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getGlobalFacetedRowModel: () => RowModel<TData>\n  /**\n   * Returns the faceted unique values for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getglobalfaceteduniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getGlobalFacetedUniqueValues: () => Map<any, number>\n  /**\n   * Returns the filter function (either user-defined or automatic, depending on configuration) for the global filter.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#getglobalfilterfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  getGlobalFilterFn: () => FilterFn<TData> | undefined\n  /**\n   * Resets the **globalFilter** state to `initialState.globalFilter`, or `true` can be passed to force a default blank state reset to `undefined`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#resetglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  resetGlobalFilter: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.globalFilter` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/filters#setglobalfilter)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/filters)\n   */\n  setGlobalFilter: (updater: Updater<any>) => void\n}\n\n//\n\nexport const Filters: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): FiltersColumnDef<TData> => {\n    return {\n      filterFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): FiltersTableState => {\n    return {\n      columnFilters: [],\n      globalFilter: undefined,\n      // filtersProgress: 1,\n      // facetProgress: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): FiltersOptions<TData> => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        const value = table\n          .getCoreRowModel()\n          .flatRows[0]?._getAllCellsByColumnId()\n          [column.id]?.getValue()\n\n        return typeof value === 'string' || typeof value === 'number'\n      },\n    } as FiltersOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoFilterFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return filterFns.includesString\n      }\n\n      if (typeof value === 'number') {\n        return filterFns.inNumberRange\n      }\n\n      if (typeof value === 'boolean') {\n        return filterFns.equals\n      }\n\n      if (value !== null && typeof value === 'object') {\n        return filterFns.equals\n      }\n\n      if (Array.isArray(value)) {\n        return filterFns.arrIncludes\n      }\n\n      return filterFns.weakEquals\n    }\n    column.getFilterFn = () => {\n      return isFunction(column.columnDef.filterFn)\n        ? column.columnDef.filterFn\n        : column.columnDef.filterFn === 'auto'\n        ? column.getAutoFilterFn()\n        : // @ts-ignore\n          table.options.filterFns?.[column.columnDef.filterFn as string] ??\n          filterFns[column.columnDef.filterFn as BuiltInFilterFn]\n    }\n    column.getCanFilter = () => {\n      return (\n        (column.columnDef.enableColumnFilter ?? true) &&\n        (table.options.enableColumnFilters ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getCanGlobalFilter = () => {\n      return (\n        (column.columnDef.enableGlobalFilter ?? true) &&\n        (table.options.enableGlobalFilter ?? true) &&\n        (table.options.enableFilters ?? true) &&\n        (table.options.getColumnCanGlobalFilter?.(column) ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsFiltered = () => column.getFilterIndex() > -1\n\n    column.getFilterValue = () =>\n      table.getState().columnFilters?.find(d => d.id === column.id)?.value\n\n    column.getFilterIndex = () =>\n      table.getState().columnFilters?.findIndex(d => d.id === column.id) ?? -1\n\n    column.setFilterValue = value => {\n      table.setColumnFilters(old => {\n        const filterFn = column.getFilterFn()\n        const previousfilter = old?.find(d => d.id === column.id)\n\n        const newFilter = functionalUpdate(\n          value,\n          previousfilter ? previousfilter.value : undefined\n        )\n\n        //\n        if (\n          shouldAutoRemoveFilter(filterFn as FilterFn<TData>, newFilter, column)\n        ) {\n          return old?.filter(d => d.id !== column.id) ?? []\n        }\n\n        const newFilterObj = { id: column.id, value: newFilter }\n\n        if (previousfilter) {\n          return (\n            old?.map(d => {\n              if (d.id === column.id) {\n                return newFilterObj\n              }\n              return d\n            }) ?? []\n          )\n        }\n\n        if (old?.length) {\n          return [...old, newFilterObj]\n        }\n\n        return [newFilterObj]\n      })\n    }\n    column._getFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, column.id)\n    column.getFacetedRowModel = () => {\n      if (!column._getFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return column._getFacetedRowModel()\n    }\n    column._getFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, column.id)\n    column.getFacetedUniqueValues = () => {\n      if (!column._getFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return column._getFacetedUniqueValues()\n    }\n    column._getFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, column.id)\n    column.getFacetedMinMaxValues = () => {\n      if (!column._getFacetedMinMaxValues) {\n        return undefined\n      }\n\n      return column._getFacetedMinMaxValues()\n    }\n    // () => [column.getFacetedRowModel()],\n    // facetedRowModel => getRowModelMinMaxValues(facetedRowModel, column.id),\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.columnFilters = {}\n    row.columnFiltersMeta = {}\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.getGlobalAutoFilterFn = () => {\n      return filterFns.includesString\n    }\n\n    table.getGlobalFilterFn = () => {\n      const { globalFilterFn: globalFilterFn } = table.options\n\n      return isFunction(globalFilterFn)\n        ? globalFilterFn\n        : globalFilterFn === 'auto'\n        ? table.getGlobalAutoFilterFn()\n        : // @ts-ignore\n          table.options.filterFns?.[globalFilterFn as string] ??\n          filterFns[globalFilterFn as BuiltInFilterFn]\n    }\n\n    table.setColumnFilters = (updater: Updater<ColumnFiltersState>) => {\n      const leafColumns = table.getAllLeafColumns()\n\n      const updateFn = (old: ColumnFiltersState) => {\n        return functionalUpdate(updater, old)?.filter(filter => {\n          const column = leafColumns.find(d => d.id === filter.id)\n\n          if (column) {\n            const filterFn = column.getFilterFn()\n\n            if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n              return false\n            }\n          }\n\n          return true\n        })\n      }\n\n      table.options.onColumnFiltersChange?.(updateFn)\n    }\n\n    table.setGlobalFilter = updater => {\n      table.options.onGlobalFilterChange?.(updater)\n    }\n\n    table.resetGlobalFilter = defaultState => {\n      table.setGlobalFilter(\n        defaultState ? undefined : table.initialState.globalFilter\n      )\n    }\n\n    table.resetColumnFilters = defaultState => {\n      table.setColumnFilters(\n        defaultState ? [] : table.initialState?.columnFilters ?? []\n      )\n    }\n\n    table.getPreFilteredRowModel = () => table.getCoreRowModel()\n    table.getFilteredRowModel = () => {\n      if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n        table._getFilteredRowModel = table.options.getFilteredRowModel(table)\n      }\n\n      if (table.options.manualFiltering || !table._getFilteredRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getFilteredRowModel()\n    }\n\n    table._getGlobalFacetedRowModel =\n      table.options.getFacetedRowModel &&\n      table.options.getFacetedRowModel(table, '__global__')\n\n    table.getGlobalFacetedRowModel = () => {\n      if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n        return table.getPreFilteredRowModel()\n      }\n\n      return table._getGlobalFacetedRowModel()\n    }\n\n    table._getGlobalFacetedUniqueValues =\n      table.options.getFacetedUniqueValues &&\n      table.options.getFacetedUniqueValues(table, '__global__')\n    table.getGlobalFacetedUniqueValues = () => {\n      if (!table._getGlobalFacetedUniqueValues) {\n        return new Map()\n      }\n\n      return table._getGlobalFacetedUniqueValues()\n    }\n\n    table._getGlobalFacetedMinMaxValues =\n      table.options.getFacetedMinMaxValues &&\n      table.options.getFacetedMinMaxValues(table, '__global__')\n    table.getGlobalFacetedMinMaxValues = () => {\n      if (!table._getGlobalFacetedMinMaxValues) {\n        return\n      }\n\n      return table._getGlobalFacetedMinMaxValues()\n    }\n  },\n}\n\nexport function shouldAutoRemoveFilter<TData extends RowData>(\n  filterFn?: FilterFn<TData>,\n  value?: any,\n  column?: Column<TData, unknown>\n) {\n  return (\n    (filterFn && filterFn.autoRemove\n      ? filterFn.autoRemove(value, column)\n      : false) ||\n    typeof value === 'undefined' ||\n    (typeof value === 'string' && !value)\n  )\n}\n","import { AggregationFn } from './features/Grouping'\nimport { isNumberArray } from './utils'\n\nconst sum: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId)\n    return sum + (typeof nextValue === 'number' ? nextValue : 0)\n  }, 0)\n}\n\nconst min: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n\n    if (\n      value != null &&\n      (min! > value || (min === undefined && value >= value))\n    ) {\n      min = value\n    }\n  })\n\n  return min\n}\n\nconst max: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (\n      value != null &&\n      (max! < value || (max === undefined && value >= value))\n    ) {\n      max = value\n    }\n  })\n\n  return max\n}\n\nconst extent: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value\n      } else {\n        if (min > value) min = value\n        if (max! < value) max = value\n      }\n    }\n  })\n\n  return [min, max]\n}\n\nconst mean: AggregationFn<any> = (columnId, leafRows) => {\n  let count = 0\n  let sum = 0\n\n  leafRows.forEach(row => {\n    let value = row.getValue<number>(columnId)\n    if (value != null && (value = +value) >= value) {\n      ++count, (sum += value)\n    }\n  })\n\n  if (count) return sum / count\n\n  return\n}\n\nconst median: AggregationFn<any> = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return\n  }\n\n  const values = leafRows.map(row => row.getValue(columnId))\n  if (!isNumberArray(values)) {\n    return\n  }\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = values.sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1]! + nums[mid]!) / 2\n}\n\nconst unique: AggregationFn<any> = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values())\n}\n\nconst uniqueCount: AggregationFn<any> = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size\n}\n\nconst count: AggregationFn<any> = (_columnId, leafRows) => {\n  return leafRows.length\n}\n\nexport const aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count,\n}\n\nexport type BuiltInAggregationFn = keyof typeof aggregationFns\n","import { makeStateUpdater, memo } from '../utils'\n\nimport { Table, OnChangeFn, Updater, Column, RowData } from '../types'\n\nimport { orderColumns } from './Grouping'\nimport { TableFeature } from '../core/table'\n\nexport interface ColumnOrderTableState {\n  columnOrder: ColumnOrderState\n}\n\nexport type ColumnOrderState = string[]\n\nexport interface ColumnOrderOptions {\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnOrder` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#oncolumnorderchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  onColumnOrderChange?: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderDefaultOptions {\n  onColumnOrderChange: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderInstance<TData extends RowData> {\n  _getOrderColumnsFn: () => (\n    columns: Column<TData, unknown>[]\n  ) => Column<TData, unknown>[]\n  /**\n   * Resets the **columnOrder** state to `initialState.columnOrder`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#resetcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  resetColumnOrder: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnOrder` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-ordering#setcolumnorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-ordering)\n   */\n  setColumnOrder: (updater: Updater<ColumnOrderState>) => void\n}\n\n//\n\nexport const Ordering: TableFeature = {\n  getInitialState: (state): ColumnOrderTableState => {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderDefaultOptions => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnOrder = updater =>\n      table.options.onColumnOrderChange?.(updater)\n    table.resetColumnOrder = defaultState => {\n      table.setColumnOrder(\n        defaultState ? [] : table.initialState.columnOrder ?? []\n      )\n    }\n    table._getOrderColumnsFn = memo(\n      () => [\n        table.getState().columnOrder,\n        table.getState().grouping,\n        table.options.groupedColumnMode,\n      ],\n      (columnOrder, grouping, groupedColumnMode) => columns => {\n        // Sort grouped columns to the start of the column list\n        // before the headers are built\n        let orderedColumns: Column<TData, unknown>[] = []\n\n        // If there is no order, return the normal columns\n        if (!columnOrder?.length) {\n          orderedColumns = columns\n        } else {\n          const columnOrderCopy = [...columnOrder]\n\n          // If there is an order, make a copy of the columns\n          const columnsCopy = [...columns]\n\n          // And make a new ordered array of the columns\n\n          // Loop over the columns and place them in order into the new array\n          while (columnsCopy.length && columnOrderCopy.length) {\n            const targetColumnId = columnOrderCopy.shift()\n            const foundIndex = columnsCopy.findIndex(\n              d => d.id === targetColumnId\n            )\n            if (foundIndex > -1) {\n              orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]!)\n            }\n          }\n\n          // If there are any columns left, add them to the end\n          orderedColumns = [...orderedColumns, ...columnsCopy]\n        }\n\n        return orderColumns(orderedColumns, grouping, groupedColumnMode)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getOrderColumnsFn',\n        // debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n  },\n}\n","import { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, Row, RowModel, Updater, RowData } from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type RowSelectionState = Record<string, boolean>\n\nexport interface RowSelectionTableState {\n  rowSelection: RowSelectionState\n}\n\nexport interface RowSelectionOptions<TData extends RowData> {\n  /**\n   * - Enables/disables multiple row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable multiple row selection for that row's children/grandchildren\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablemultirowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableMultiRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * - Enables/disables row selection for all rows in the table OR\n   * - A function that given a row, returns whether to enable/disable row selection for that row\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablerowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * Enables/disables automatic sub-row selection when a parent row is selected, or a function that enables/disables automatic sub-row selection for each row.\n   * (Use in combination with expanding or grouping features)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#enablesubrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  enableSubRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowSelection` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#onrowselectionchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  onRowSelectionChange?: OnChangeFn<RowSelectionState>\n  // enableGroupingRowSelection?:\n  //   | boolean\n  //   | ((\n  //       row: Row<TData>\n  //     ) => boolean)\n  // isAdditiveSelectEvent?: (e: unknown) => boolean\n  // isInclusiveSelectEvent?: (e: unknown) => boolean\n  // selectRowsFn?: (\n  //   table: Table<TData>,\n  //   rowModel: RowModel<TData>\n  // ) => RowModel<TData>\n}\n\nexport interface RowSelectionRow {\n  /**\n   * Returns whether or not the row can multi-select.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanmultiselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanMultiSelect: () => boolean\n  /**\n   * Returns whether or not the row can be selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselect)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelect: () => boolean\n  /**\n   * Returns whether or not the row can select sub rows automatically when the parent row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getcanselectsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getCanSelectSubRows: () => boolean\n  /**\n   * Returns whether or not all of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallsubrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllSubRowsSelected: () => boolean\n  /**\n   * Returns whether or not the row is selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSelected: () => boolean\n  /**\n   * Returns whether or not some of the row's sub rows are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomeselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeSelected: () => boolean\n  /**\n   * Returns a handler that can be used to toggle the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleSelectedHandler: () => (event: unknown) => void\n  /**\n   * Selects/deselects the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleSelected: (value?: boolean, opts?: { selectChildren?: boolean }) => void\n}\n\nexport interface RowSelectionInstance<TData extends RowData> {\n  /**\n   * Returns the row model of all rows that are selected after filtering has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getfilteredselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getFilteredSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getgroupedselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getGroupedSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns whether or not all rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllPageRowsSelected: () => boolean\n  /**\n   * Returns whether or not all rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getisallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsAllRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows on the current page are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomepagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomePageRowsSelected: () => boolean\n  /**\n   * Returns whether or not any rows in the table are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getissomerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getIsSomeRowsSelected: () => boolean\n  /**\n   * Returns the core row model of all rows before row selection has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getpreselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getPreSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model of all rows that are selected.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#getselectedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getSelectedRowModel: () => RowModel<TData>\n  /**\n   * Returns a handler that can be used to toggle all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallpagerowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllPageRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Returns a handler that can be used to toggle all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#gettoggleallrowsselectedhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  getToggleAllRowsSelectedHandler: () => (event: unknown) => void\n  /**\n   * Resets the **rowSelection** state to the `initialState.rowSelection`, or `true` can be passed to force a default blank state reset to `{}`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#resetrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  resetRowSelection: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowSelection` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#setrowselection)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  setRowSelection: (updater: Updater<RowSelectionState>) => void\n  /**\n   * Selects/deselects all rows on the current page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallpagerowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllPageRowsSelected: (value?: boolean) => void\n  /**\n   * Selects/deselects all rows in the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/row-selection#toggleallrowsselected)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/row-selection)\n   */\n  toggleAllRowsSelected: (value?: boolean) => void\n}\n\n//\n\nexport const RowSelection: TableFeature = {\n  getInitialState: (state): RowSelectionTableState => {\n    return {\n      rowSelection: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionOptions<TData> => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true,\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setRowSelection = updater =>\n      table.options.onRowSelectionChange?.(updater)\n    table.resetRowSelection = defaultState =>\n      table.setRowSelection(\n        defaultState ? {} : table.initialState.rowSelection ?? {}\n      )\n    table.toggleAllRowsSelected = value => {\n      table.setRowSelection(old => {\n        value =\n          typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected()\n\n        const rowSelection = { ...old }\n\n        const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows\n\n        // We don't use `mutateRowIsSelected` here for performance reasons.\n        // All of the rows are flat already, so it wouldn't be worth it\n        if (value) {\n          preGroupedFlatRows.forEach(row => {\n            if (!row.getCanSelect()) {\n              return\n            }\n            rowSelection[row.id] = true\n          })\n        } else {\n          preGroupedFlatRows.forEach(row => {\n            delete rowSelection[row.id]\n          })\n        }\n\n        return rowSelection\n      })\n    }\n    table.toggleAllPageRowsSelected = value =>\n      table.setRowSelection(old => {\n        const resolvedValue =\n          typeof value !== 'undefined'\n            ? value\n            : !table.getIsAllPageRowsSelected()\n\n        const rowSelection: RowSelectionState = { ...old }\n\n        table.getRowModel().rows.forEach(row => {\n          mutateRowIsSelected(rowSelection, row.id, resolvedValue, true, table)\n        })\n\n        return rowSelection\n      })\n\n    // addRowSelectionRange: rowId => {\n    //   const {\n    //     rows,\n    //     rowsById,\n    //     options: { selectGroupingRows, selectSubRows },\n    //   } = table\n\n    //   const findSelectedRow = (rows: Row[]) => {\n    //     let found\n    //     rows.find(d => {\n    //       if (d.getIsSelected()) {\n    //         found = d\n    //         return true\n    //       }\n    //       const subFound = findSelectedRow(d.subRows || [])\n    //       if (subFound) {\n    //         found = subFound\n    //         return true\n    //       }\n    //       return false\n    //     })\n    //     return found\n    //   }\n\n    //   const firstRow = findSelectedRow(rows) || rows[0]\n    //   const lastRow = rowsById[rowId]\n\n    //   let include = false\n    //   const selectedRowIds = {}\n\n    //   const addRow = (row: Row) => {\n    //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n    //       rowsById,\n    //       selectGroupingRows: selectGroupingRows!,\n    //       selectSubRows: selectSubRows!,\n    //     })\n    //   }\n\n    //   table.rows.forEach(row => {\n    //     const isFirstRow = row.id === firstRow.id\n    //     const isLastRow = row.id === lastRow.id\n\n    //     if (isFirstRow || isLastRow) {\n    //       if (!include) {\n    //         include = true\n    //       } else if (include) {\n    //         addRow(row)\n    //         include = false\n    //       }\n    //     }\n\n    //     if (include) {\n    //       addRow(row)\n    //     }\n    //   })\n\n    //   table.setRowSelection(selectedRowIds)\n    // },\n    table.getPreSelectedRowModel = () => table.getCoreRowModel()\n    table.getSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getCoreRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getSelectedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n\n    table.getFilteredSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getFilteredRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'production' &&\n          'getFilteredSelectedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n\n    table.getGroupedSelectedRowModel = memo(\n      () => [table.getState().rowSelection, table.getSortedRowModel()],\n      (rowSelection, rowModel) => {\n        if (!Object.keys(rowSelection).length) {\n          return {\n            rows: [],\n            flatRows: [],\n            rowsById: {},\n          }\n        }\n\n        return selectRowsFn(table, rowModel)\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'production' && 'getGroupedSelectedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n\n    ///\n\n    // getGroupingRowCanSelect: rowId => {\n    //   const row = table.getRow(rowId)\n\n    //   if (!row) {\n    //     throw new Error()\n    //   }\n\n    //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n    //     return table.options.enableGroupingRowSelection(row)\n    //   }\n\n    //   return table.options.enableGroupingRowSelection ?? false\n    // },\n\n    table.getIsAllRowsSelected = () => {\n      const preGroupedFlatRows = table.getFilteredRowModel().flatRows\n      const { rowSelection } = table.getState()\n\n      let isAllRowsSelected = Boolean(\n        preGroupedFlatRows.length && Object.keys(rowSelection).length\n      )\n\n      if (isAllRowsSelected) {\n        if (\n          preGroupedFlatRows.some(\n            row => row.getCanSelect() && !rowSelection[row.id]\n          )\n        ) {\n          isAllRowsSelected = false\n        }\n      }\n\n      return isAllRowsSelected\n    }\n\n    table.getIsAllPageRowsSelected = () => {\n      const paginationFlatRows = table\n        .getPaginationRowModel()\n        .flatRows.filter(row => row.getCanSelect())\n      const { rowSelection } = table.getState()\n\n      let isAllPageRowsSelected = !!paginationFlatRows.length\n\n      if (\n        isAllPageRowsSelected &&\n        paginationFlatRows.some(row => !rowSelection[row.id])\n      ) {\n        isAllPageRowsSelected = false\n      }\n\n      return isAllPageRowsSelected\n    }\n\n    table.getIsSomeRowsSelected = () => {\n      const totalSelected = Object.keys(\n        table.getState().rowSelection ?? {}\n      ).length\n      return (\n        totalSelected > 0 &&\n        totalSelected < table.getFilteredRowModel().flatRows.length\n      )\n    }\n\n    table.getIsSomePageRowsSelected = () => {\n      const paginationFlatRows = table.getPaginationRowModel().flatRows\n      return table.getIsAllPageRowsSelected()\n        ? false\n        : paginationFlatRows\n            .filter(row => row.getCanSelect())\n            .some(d => d.getIsSelected() || d.getIsSomeSelected())\n    }\n\n    table.getToggleAllRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n\n    table.getToggleAllPageRowsSelectedHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllPageRowsSelected(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.toggleSelected = (value, opts) => {\n      const isSelected = row.getIsSelected()\n\n      table.setRowSelection(old => {\n        value = typeof value !== 'undefined' ? value : !isSelected\n\n        if (row.getCanSelect() && isSelected === value) {\n          return old\n        }\n\n        const selectedRowIds = { ...old }\n\n        mutateRowIsSelected(\n          selectedRowIds,\n          row.id,\n          value,\n          opts?.selectChildren ?? true,\n          table\n        )\n\n        return selectedRowIds\n      })\n    }\n    row.getIsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isRowSelected(row, rowSelection)\n    }\n\n    row.getIsSomeSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'some'\n    }\n\n    row.getIsAllSubRowsSelected = () => {\n      const { rowSelection } = table.getState()\n      return isSubRowSelected(row, rowSelection, table) === 'all'\n    }\n\n    row.getCanSelect = () => {\n      if (typeof table.options.enableRowSelection === 'function') {\n        return table.options.enableRowSelection(row)\n      }\n\n      return table.options.enableRowSelection ?? true\n    }\n\n    row.getCanSelectSubRows = () => {\n      if (typeof table.options.enableSubRowSelection === 'function') {\n        return table.options.enableSubRowSelection(row)\n      }\n\n      return table.options.enableSubRowSelection ?? true\n    }\n\n    row.getCanMultiSelect = () => {\n      if (typeof table.options.enableMultiRowSelection === 'function') {\n        return table.options.enableMultiRowSelection(row)\n      }\n\n      return table.options.enableMultiRowSelection ?? true\n    }\n    row.getToggleSelectedHandler = () => {\n      const canSelect = row.getCanSelect()\n\n      return (e: unknown) => {\n        if (!canSelect) return\n        row.toggleSelected(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n\nconst mutateRowIsSelected = <TData extends RowData>(\n  selectedRowIds: Record<string, boolean>,\n  id: string,\n  value: boolean,\n  includeChildren: boolean,\n  table: Table<TData>\n) => {\n  const row = table.getRow(id, true)\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key])\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true\n    }\n  } else {\n    delete selectedRowIds[id]\n  }\n  // }\n\n  if (includeChildren && row.subRows?.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row =>\n      mutateRowIsSelected(selectedRowIds, row.id, value, includeChildren, table)\n    )\n  }\n}\n\nexport function selectRowsFn<TData extends RowData>(\n  table: Table<TData>,\n  rowModel: RowModel<TData>\n): RowModel<TData> {\n  const rowSelection = table.getState().rowSelection\n\n  const newSelectedFlatRows: Row<TData>[] = []\n  const newSelectedRowsById: Record<string, Row<TData>> = {}\n\n  // Filters top level and nested rows\n  const recurseRows = (rows: Row<TData>[], depth = 0): Row<TData>[] => {\n    return rows\n      .map(row => {\n        const isSelected = isRowSelected(row, rowSelection)\n\n        if (isSelected) {\n          newSelectedFlatRows.push(row)\n          newSelectedRowsById[row.id] = row\n        }\n\n        if (row.subRows?.length) {\n          row = {\n            ...row,\n            subRows: recurseRows(row.subRows, depth + 1),\n          }\n        }\n\n        if (isSelected) {\n          return row\n        }\n      })\n      .filter(Boolean) as Row<TData>[]\n  }\n\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById,\n  }\n}\n\nexport function isRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>\n): boolean {\n  return selection[row.id] ?? false\n}\n\nexport function isSubRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>,\n  table: Table<TData>\n): boolean | 'some' | 'all' {\n  if (!row.subRows?.length) return false\n\n  let allChildrenSelected = true\n  let someSelected = false\n\n  row.subRows.forEach(subRow => {\n    // Bail out early if we know both of these\n    if (someSelected && !allChildrenSelected) {\n      return\n    }\n\n    if (subRow.getCanSelect()) {\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    }\n\n    // Check row selection of nested subrows\n    if (subRow.subRows && subRow.subRows.length) {\n      const subRowChildrenSelected = isSubRowSelected(subRow, selection, table)\n      if (subRowChildrenSelected === 'all') {\n        someSelected = true\n      } else if (subRowChildrenSelected === 'some') {\n        someSelected = true\n        allChildrenSelected = false\n      } else {\n        allChildrenSelected = false\n      }\n    }\n  })\n\n  return allChildrenSelected ? 'all' : someSelected ? 'some' : false\n}\n","import { SortingFn } from './features/Sorting'\n\nexport const reSplitAlphaNumeric = /([0-9]+)/gm\n\nconst alphanumeric: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\nconst alphanumericCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\nconst datetime: SortingFn<any> = (rowA, rowB, columnId) => {\n  const a = rowA.getValue<Date>(columnId)\n  const b = rowB.getValue<Date>(columnId)\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nconst basic: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId))\n}\n\n// Utils\n\nfunction compareBasic(a: any, b: any) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction toString(a: any) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr: string, bStr: string) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean)\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift()!\n    const bb = b.shift()!\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0]!)) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1]!)) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\n// Exports\n\nexport const sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic,\n}\n\nexport type BuiltInSortingFn = keyof typeof sortingFns\n","import { functionalUpdate, memo, RequiredKeys } from '../utils'\n\nimport {\n  Updater,\n  TableOptionsResolved,\n  TableState,\n  Table,\n  InitialTableState,\n  Row,\n  Column,\n  RowModel,\n  ColumnDef,\n  TableOptions,\n  RowData,\n  TableMeta,\n  ColumnDefResolved,\n  GroupColumnDef,\n} from '../types'\n\n//\nimport { createColumn } from './column'\nimport { Headers } from './headers'\n//\n\nimport { ColumnSizing } from '../features/ColumnSizing'\nimport { Expanding } from '../features/Expanding'\nimport { Filters } from '../features/Filters'\nimport { Grouping } from '../features/Grouping'\nimport { Ordering } from '../features/Ordering'\nimport { Pagination } from '../features/Pagination'\nimport { Pinning } from '../features/Pinning'\nimport { RowSelection } from '../features/RowSelection'\nimport { Sorting } from '../features/Sorting'\nimport { Visibility } from '../features/Visibility'\n\nexport interface TableFeature {\n  createCell?: (cell: any, column: any, row: any, table: any) => any\n  createColumn?: (column: any, table: any) => any\n  createHeader?: (column: any, table: any) => any\n  createRow?: (row: any, table: any) => any\n  createTable?: (table: any) => any\n  getDefaultColumnDef?: () => any\n  getDefaultOptions?: (table: any) => any\n  getInitialState?: (initialState?: InitialTableState) => any\n}\n\nconst features = [\n  Headers,\n  Visibility,\n  Ordering,\n  Pinning,\n  Filters,\n  Sorting,\n  Grouping,\n  Expanding,\n  Pagination,\n  RowSelection,\n  ColumnSizing,\n] as const\n\n//\n\nexport interface CoreTableState {}\n\nexport interface CoreOptions<TData extends RowData> {\n  /**\n   * Set this option to override any of the `autoReset...` feature options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#autoresetall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  autoResetAll?: boolean\n  /**\n   * The array of column defs to use for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  columns: ColumnDef<TData, any>[]\n  /**\n   * The data for the table to display. This array should match the type you provided to `table.setRowType<...>`. Columns can access this data via string/index or a functional accessor. When the `data` option changes reference, the table will reprocess the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#data)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  data: TData[]\n  /**\n   * Set this option to `true` to output all debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugall)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugAll?: boolean\n  /**\n   * Set this option to `true` to output column debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugColumns?: boolean\n  /**\n   * Set this option to `true` to output header debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugheaders)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugHeaders?: boolean\n  /**\n   * Set this option to `true` to output row debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugRows?: boolean\n  /**\n   * Set this option to `true` to output table debugging information to the console.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#debugtable)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  debugTable?: boolean\n  /**\n   * Default column options to use for all column defs supplied to the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#defaultcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  defaultColumn?: Partial<ColumnDef<TData, unknown>>\n  /**\n   * This required option is a factory for a function that computes and returns the core row model for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: (table: Table<any>) => () => RowModel<any>\n  /**\n   * This optional function is used to derive a unique ID for any given row. If not provided the rows index is used (nested rows join together with `.` using their grandparents' index eg. `index.index.index`). If you need to identify individual rows that are originating from any server-side operations, it's suggested you use this function to return an ID that makes sense regardless of network IO/ambiguity eg. a userId, taskId, database ID field, etc.\n   * @example getRowId: row => row.userId\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowId?: (originalRow: TData, index: number, parent?: Row<TData>) => string\n  /**\n   * This optional function is used to access the sub rows for any given row. If you are using nested rows, you will need to use this function to return the sub rows object (or undefined) from the row.\n   * @example getSubRows: row => row.subRows\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getSubRows?: (originalRow: TData, index: number) => undefined | TData[]\n  /**\n   * Use this option to optionally pass initial state to the table. This state will be used when resetting various table states either automatically by the table (eg. `options.autoResetPageIndex`) or via functions like `table.resetRowSelection()`. Most reset function allow you optionally pass a flag to reset to a blank/default state instead of the initial state.\n   *\n   * Table state will not be reset when this object changes, which also means that the initial state object does not need to be stable.\n   *\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState?: InitialTableState\n  /**\n   * This option is used to optionally implement the merging of table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#mergeoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  mergeOptions?: (\n    defaultOptions: TableOptions<TData>,\n    options: Partial<TableOptions<TData>>\n  ) => TableOptions<TData>\n  /**\n   * You can pass any object to `options.meta` and access it anywhere the `table` is available via `table.options.meta`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#meta)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  meta?: TableMeta<TData>\n  /**\n   * The `onStateChange` option can be used to optionally listen to state changes within the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#onstatechange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  onStateChange: (updater: Updater<TableState>) => void\n  /**\n   * Value used when the desired value is not found in the data.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#renderfallbackvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  renderFallbackValue: any\n  /**\n   * The `state` option can be used to optionally _control_ part or all of the table state. The state you pass here will merge with and overwrite the internal automatically-managed state to produce the final state for the table. You can also listen to state changes via the `onStateChange` option.\n   * > Note: Any state passed in here will override both the internal state and any other `initialState` you provide.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#state)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  state: Partial<TableState>\n}\n\nexport interface CoreInstance<TData extends RowData> {\n  _features: readonly TableFeature[]\n  _getAllFlatColumnsById: () => Record<string, Column<TData, unknown>>\n  _getColumnDefs: () => ColumnDef<TData, unknown>[]\n  _getCoreRowModel?: () => RowModel<TData>\n  _getDefaultColumnDef: () => Partial<ColumnDef<TData, unknown>>\n  _getRowId: (_: TData, index: number, parent?: Row<TData>) => string\n  _queue: (cb: () => void) => void\n  /**\n   * Returns all columns in the table in their normalized and nested hierarchy.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all columns in the table flattened to a single level.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all leaf-node columns in the table flattened to a single level. This does not include parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getallleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getAllLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a single column by its ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcolumn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getColumn: (columnId: string) => Column<TData, unknown> | undefined\n  /**\n   * Returns the core row model before any processing has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getcorerowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getCoreRowModel: () => RowModel<TData>\n  /**\n   * Returns the row with the given ID.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRow: (id: string, searchAll?: boolean) => Row<TData>\n  /**\n   * Returns the final model after all processing from other used features has been applied. This is the row model that is most commonly used for rendering.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getRowModel: () => RowModel<TData>\n  /**\n   * Call this function to get the table's current state. It's recommended to use this function and its state, especially when managing the table state manually. It is the exact same state used internally by the table for every feature and function it provides.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#getstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  getState: () => TableState\n  /**\n   * This is the resolved initial state of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#initialstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  initialState: TableState\n  /**\n   * A read-only reference to the table's current options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#options)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  options: RequiredKeys<TableOptionsResolved<TData>, 'state'>\n  /**\n   * Call this function to reset the table state to the initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#reset)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  reset: () => void\n  /**\n   * This function can be used to update the table options.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setOptions: (newOptions: Updater<TableOptionsResolved<TData>>) => void\n  /**\n   * Call this function to update the table state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/table#setstate)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/tables)\n   */\n  setState: (updater: Updater<TableState>) => void\n}\n\nexport function createTable<TData extends RowData>(\n  options: TableOptionsResolved<TData>\n): Table<TData> {\n  if (options.debugAll || options.debugTable) {\n    console.info('Creating Table Instance...')\n  }\n\n  let table = { _features: features } as unknown as Table<TData>\n\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions?.(table))\n  }, {}) as TableOptionsResolved<TData>\n\n  const mergeOptions = (options: TableOptionsResolved<TData>) => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options)\n    }\n\n    return {\n      ...defaultOptions,\n      ...options,\n    }\n  }\n\n  const coreInitialState: CoreTableState = {}\n\n  let initialState = {\n    ...coreInitialState,\n    ...(options.initialState ?? {}),\n  } as TableState\n\n  table._features.forEach(feature => {\n    initialState = feature.getInitialState?.(initialState) ?? initialState\n  })\n\n  const queued: (() => void)[] = []\n  let queuedTimeout = false\n\n  const coreInstance: CoreInstance<TData> = {\n    _features: features,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb)\n\n      if (!queuedTimeout) {\n        queuedTimeout = true\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve()\n          .then(() => {\n            while (queued.length) {\n              queued.shift()!()\n            }\n            queuedTimeout = false\n          })\n          .catch(error =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState)\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options)\n      table.options = mergeOptions(newOptions) as RequiredKeys<\n        TableOptionsResolved<TData>,\n        'state'\n      >\n    },\n\n    getState: () => {\n      return table.options.state as TableState\n    },\n\n    setState: (updater: Updater<TableState>) => {\n      table.options.onStateChange?.(updater)\n    },\n\n    _getRowId: (row: TData, index: number, parent?: Row<TData>) =>\n      table.options.getRowId?.(row, index, parent) ??\n      `${parent ? [parent.id, index].join('.') : index}`,\n\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table)\n      }\n\n      return table._getCoreRowModel!()\n    },\n\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel()\n    },\n    getRow: (id: string, searchAll?: boolean) => {\n      const row = (searchAll ? table.getCoreRowModel() : table.getRowModel())\n        .rowsById[id]\n\n      if (!row) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(`getRow expected an ID, but got ${id}`)\n        }\n        throw new Error()\n      }\n\n      return row\n    },\n    _getDefaultColumnDef: memo(\n      () => [table.options.defaultColumn],\n      defaultColumn => {\n        defaultColumn = (defaultColumn ?? {}) as Partial<\n          ColumnDef<TData, unknown>\n        >\n\n        return {\n          header: props => {\n            const resolvedColumnDef = props.header.column\n              .columnDef as ColumnDefResolved<TData>\n\n            if (resolvedColumnDef.accessorKey) {\n              return resolvedColumnDef.accessorKey\n            }\n\n            if (resolvedColumnDef.accessorFn) {\n              return resolvedColumnDef.id\n            }\n\n            return null\n          },\n          // footer: props => props.header.column.id,\n          cell: props => props.renderValue<any>()?.toString?.() ?? null,\n          ...table._features.reduce((obj, feature) => {\n            return Object.assign(obj, feature.getDefaultColumnDef?.())\n          }, {}),\n          ...defaultColumn,\n        } as Partial<ColumnDef<TData, unknown>>\n      },\n      {\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n        key: process.env.NODE_ENV === 'development' && 'getDefaultColumnDef',\n      }\n    ),\n\n    _getColumnDefs: () => table.options.columns,\n\n    getAllColumns: memo(\n      () => [table._getColumnDefs()],\n      columnDefs => {\n        const recurseColumns = (\n          columnDefs: ColumnDef<TData, unknown>[],\n          parent?: Column<TData, unknown>,\n          depth = 0\n        ): Column<TData, unknown>[] => {\n          return columnDefs.map(columnDef => {\n            const column = createColumn(table, columnDef, depth, parent)\n\n            const groupingColumnDef = columnDef as GroupColumnDef<\n              TData,\n              unknown\n            >\n\n            column.columns = groupingColumnDef.columns\n              ? recurseColumns(groupingColumnDef.columns, column, depth + 1)\n              : []\n\n            return column\n          })\n        }\n\n        return recurseColumns(columnDefs)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getAllFlatColumns: memo(\n      () => [table.getAllColumns()],\n      allColumns => {\n        return allColumns.flatMap(column => {\n          return column.getFlatColumns()\n        })\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllFlatColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    _getAllFlatColumnsById: memo(\n      () => [table.getAllFlatColumns()],\n      flatColumns => {\n        return flatColumns.reduce(\n          (acc, column) => {\n            acc[column.id] = column\n            return acc\n          },\n          {} as Record<string, Column<TData, unknown>>\n        )\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllFlatColumnsById',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getAllLeafColumns: memo(\n      () => [table.getAllColumns(), table._getOrderColumnsFn()],\n      (allColumns, orderColumns) => {\n        let leafColumns = allColumns.flatMap(column => column.getLeafColumns())\n        return orderColumns(leafColumns)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId]\n\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`)\n      }\n\n      return column\n    },\n  }\n\n  Object.assign(table, coreInstance)\n\n  for (let index = 0; index < table._features.length; index++) {\n    const feature = table._features[index]\n    feature?.createTable?.(table)\n  }\n\n  return table\n}\n","import { TableFeature } from '../core/table'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  Row,\n  RowData,\n} from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type VisibilityState = Record<string, boolean>\n\nexport interface VisibilityTableState {\n  columnVisibility: VisibilityState\n}\n\nexport interface VisibilityOptions {\n  enableHiding?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnVisibility` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#oncolumnvisibilitychange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  onColumnVisibilityChange?: OnChangeFn<VisibilityState>\n}\n\nexport type VisibilityDefaultOptions = Pick<\n  VisibilityOptions,\n  'onColumnVisibilityChange'\n>\n\nexport interface VisibilityInstance<TData extends RowData> {\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the unpinned/center portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcentervisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCenterVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether all columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsAllColumnsVisible: () => boolean\n  /**\n   * Returns whether any columns are visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getissomecolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsSomeColumnsVisible: () => boolean\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the left portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getleftvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getLeftVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * If column pinning, returns a flat array of leaf-node columns that are visible in the right portion of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getrightvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getRightVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a handler for toggling the visibility of all columns, meant to be bound to a `input[type=checkbox]` element.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettoggleallcolumnsvisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleAllColumnsVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Returns a flat array of columns that are visible, including parent columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleFlatColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns a flat array of leaf-node columns that are visible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisibleleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the column visibility state to the initial state. If `defaultState` is provided, the state will be reset to `{}`\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#resetcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  resetColumnVisibility: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnVisibility` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#setcolumnvisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  setColumnVisibility: (updater: Updater<VisibilityState>) => void\n  /**\n   * Toggles the visibility of all columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#toggleallcolumnsvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleAllColumnsVisible: (value?: boolean) => void\n}\n\nexport interface VisibilityColumnDef {\n  enableHiding?: boolean\n}\n\nexport interface VisibilityRow<TData extends RowData> {\n  _getAllVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns an array of cells that account for column visibility for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface VisibilityColumn {\n  /**\n   * Returns whether the column can be hidden\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getcanhide)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getCanHide: () => boolean\n  /**\n   * Returns whether the column is visible\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#getisvisible)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getIsVisible: () => boolean\n  /**\n   * Returns a function that can be used to toggle the column visibility. This function can be used to bind to an event handler to a checkbox.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#gettogglevisibilityhandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  getToggleVisibilityHandler: () => (event: unknown) => void\n  /**\n   * Toggles the visibility of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/column-visibility#togglevisibility)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-visibility)\n   */\n  toggleVisibility: (value?: boolean) => void\n}\n\n//\n\nexport const Visibility: TableFeature = {\n  getInitialState: (state): VisibilityTableState => {\n    return {\n      columnVisibility: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityDefaultOptions => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleVisibility = value => {\n      if (column.getCanHide()) {\n        table.setColumnVisibility(old => ({\n          ...old,\n          [column.id]: value ?? !column.getIsVisible(),\n        }))\n      }\n    }\n    column.getIsVisible = () => {\n      return table.getState().columnVisibility?.[column.id] ?? true\n    }\n\n    column.getCanHide = () => {\n      return (\n        (column.columnDef.enableHiding ?? true) &&\n        (table.options.enableHiding ?? true)\n      )\n    }\n    column.getToggleVisibilityHandler = () => {\n      return (e: unknown) => {\n        column.toggleVisibility?.(\n          ((e as MouseEvent).target as HTMLInputElement).checked\n        )\n      }\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row._getAllVisibleCells = memo(\n      () => [row.getAllCells(), table.getState().columnVisibility],\n      cells => {\n        return cells.filter(cell => cell.column.getIsVisible())\n      },\n      {\n        key: process.env.NODE_ENV === 'production' && 'row._getAllVisibleCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n    row.getVisibleCells = memo(\n      () => [\n        row.getLeftVisibleCells(),\n        row.getCenterVisibleCells(),\n        row.getRightVisibleCells(),\n      ],\n      (left, center, right) => [...left, ...center, ...right],\n      {\n        key: process.env.NODE_ENV === 'development' && 'row.getVisibleCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    const makeVisibleColumnsMethod = (\n      key: string,\n      getColumns: () => Column<TData, unknown>[]\n    ): (() => Column<TData, unknown>[]) => {\n      return memo(\n        () => [\n          getColumns(),\n          getColumns()\n            .filter(d => d.getIsVisible())\n            .map(d => d.id)\n            .join('_'),\n        ],\n        columns => {\n          return columns.filter(d => d.getIsVisible?.())\n        },\n        {\n          key,\n          debug: () => table.options.debugAll ?? table.options.debugColumns,\n        }\n      )\n    }\n\n    table.getVisibleFlatColumns = makeVisibleColumnsMethod(\n      'getVisibleFlatColumns',\n      () => table.getAllFlatColumns()\n    )\n    table.getVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getVisibleLeafColumns',\n      () => table.getAllLeafColumns()\n    )\n    table.getLeftVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getLeftVisibleLeafColumns',\n      () => table.getLeftLeafColumns()\n    )\n    table.getRightVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getRightVisibleLeafColumns',\n      () => table.getRightLeafColumns()\n    )\n    table.getCenterVisibleLeafColumns = makeVisibleColumnsMethod(\n      'getCenterVisibleLeafColumns',\n      () => table.getCenterLeafColumns()\n    )\n\n    table.setColumnVisibility = updater =>\n      table.options.onColumnVisibilityChange?.(updater)\n\n    table.resetColumnVisibility = defaultState => {\n      table.setColumnVisibility(\n        defaultState ? {} : table.initialState.columnVisibility ?? {}\n      )\n    }\n\n    table.toggleAllColumnsVisible = value => {\n      value = value ?? !table.getIsAllColumnsVisible()\n\n      table.setColumnVisibility(\n        table.getAllLeafColumns().reduce(\n          (obj, column) => ({\n            ...obj,\n            [column.id]: !value ? !column.getCanHide?.() : value,\n          }),\n          {}\n        )\n      )\n    }\n\n    table.getIsAllColumnsVisible = () =>\n      !table.getAllLeafColumns().some(column => !column.getIsVisible?.())\n\n    table.getIsSomeColumnsVisible = () =>\n      table.getAllLeafColumns().some(column => column.getIsVisible?.())\n\n    table.getToggleAllColumnsVisibilityHandler = () => {\n      return (e: unknown) => {\n        table.toggleAllColumnsVisible(\n          ((e as MouseEvent).target as HTMLInputElement)?.checked\n        )\n      }\n    }\n  },\n}\n","import { RowModel } from '..'\nimport { BuiltInAggregationFn, aggregationFns } from '../aggregationFns'\nimport { TableFeature } from '../core/table'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  ColumnDefTemplate,\n  RowData,\n  AggregationFns,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type GroupingState = string[]\n\nexport interface GroupingTableState {\n  grouping: GroupingState\n}\n\nexport type AggregationFn<TData extends RowData> = (\n  columnId: string,\n  leafRows: Row<TData>[],\n  childRows: Row<TData>[]\n) => any\n\nexport type CustomAggregationFns = Record<string, AggregationFn<any>>\n\nexport type AggregationFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof AggregationFns\n  | BuiltInAggregationFn\n  | AggregationFn<TData>\n\nexport interface GroupingColumnDef<TData extends RowData, TValue> {\n  /**\n   * The cell to display each row for the column if the cell is an aggregate. If a function is passed, it will be passed a props object with the context of the cell and should return the property type for your adapter (the exact type depends on the adapter being used).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregatedcell)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregatedCell?: ColumnDefTemplate<\n    ReturnType<Cell<TData, TValue>['getContext']>\n  >\n  /**\n   * The resolved aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#aggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  aggregationFn?: AggregationFnOption<TData>\n  /**\n   * Enables/disables grouping for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Specify a value to be used for grouping rows on this column. If this option is not specified, the value derived from `accessorKey` / `accessorFn` will be used instead.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue?: (row: TData) => any\n}\n\nexport interface GroupingColumn<TData extends RowData> {\n  /**\n   * Returns the aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns the automatically inferred aggregation function for the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getautoaggregationfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getAutoAggregationFn: () => AggregationFn<TData> | undefined\n  /**\n   * Returns whether or not the column can be grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getcangroup)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getCanGroup: () => boolean\n  /**\n   * Returns the index of the column in the grouping state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedIndex: () => number\n  /**\n   * Returns whether or not the column is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns a function that toggles the grouping state of the column. This is useful for passing to the `onClick` prop of a button.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#gettogglegroupinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getToggleGroupingHandler: () => () => void\n  /**\n   * Toggles the grouping state of the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#togglegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  toggleGrouping: () => void\n}\n\nexport interface GroupingRow {\n  _groupingValuesCache: Record<string, any>\n  /**\n   * Returns the grouping value for any row and column (including leaf rows).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupingValue: (columnId: string) => unknown\n  /**\n   * Returns whether or not the row is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * If this row is grouped, this is the id of the column that this row is grouped by.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingcolumnid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingColumnId?: string\n  /**\n   * If this row is grouped, this is the unique/shared value for the `groupingColumnId` for all of the rows in this group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupingvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupingValue?: unknown\n}\n\nexport interface GroupingCell {\n  /**\n   * Returns whether or not the cell is currently aggregated.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisaggregated)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsAggregated: () => boolean\n  /**\n   * Returns whether or not the cell is currently grouped.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisgrouped)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsGrouped: () => boolean\n  /**\n   * Returns whether or not the cell is currently a placeholder cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getisplaceholder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getIsPlaceholder: () => boolean\n}\n\nexport interface ColumnDefaultOptions {\n  enableGrouping: boolean\n  onGroupingChange: OnChangeFn<GroupingState>\n}\n\ninterface GroupingOptionsBase {\n  /**\n   * Enables/disables grouping for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#enablegrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  enableGrouping?: boolean\n  /**\n   * Returns the row model after grouping has taken place, but no further.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Grouping columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#groupedcolumnmode)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  groupedColumnMode?: false | 'reorder' | 'remove'\n  /**\n   * Enables manual grouping. If this option is set to `true`, the table will not automatically group rows using `getGroupedRowModel()` and instead will expect you to manually group the rows before passing them to the table. This is useful if you are doing server-side grouping and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#manualgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  manualGrouping?: boolean\n  /**\n   * If this function is provided, it will be called when the grouping state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.grouping` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#ongroupingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  onGroupingChange?: OnChangeFn<GroupingState>\n}\n\ntype ResolvedAggregationFns = keyof AggregationFns extends never\n  ? {\n      aggregationFns?: Record<string, AggregationFn<any>>\n    }\n  : {\n      aggregationFns: Record<keyof AggregationFns, AggregationFn<any>>\n    }\n\nexport interface GroupingOptions\n  extends GroupingOptionsBase,\n    ResolvedAggregationFns {}\n\nexport type GroupingColumnMode = false | 'reorder' | 'remove'\n\nexport interface GroupingInstance<TData extends RowData> {\n  _getGroupedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getgroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getGroupedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any grouping has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#getpregroupedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  getPreGroupedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **grouping** state to `initialState.grouping`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#resetgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  resetGrouping: (defaultState?: boolean) => void\n  /**\n   * Updates the grouping state of the table via an update function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/grouping#setgrouping)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/grouping)\n   */\n  setGrouping: (updater: Updater<GroupingState>) => void\n}\n\n//\n\nexport const Grouping: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): GroupingColumnDef<\n    TData,\n    unknown\n  > => {\n    return {\n      aggregatedCell: props => (props.getValue() as any)?.toString?.() ?? null,\n      aggregationFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): GroupingTableState => {\n    return {\n      grouping: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingOptions => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder',\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.toggleGrouping = () => {\n      table.setGrouping(old => {\n        // Find any existing grouping for this column\n        if (old?.includes(column.id)) {\n          return old.filter(d => d !== column.id)\n        }\n\n        return [...(old ?? []), column.id]\n      })\n    }\n\n    column.getCanGroup = () => {\n      return (\n        column.columnDef.enableGrouping ??\n        true ??\n        table.options.enableGrouping ??\n        true ??\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsGrouped = () => {\n      return table.getState().grouping?.includes(column.id)\n    }\n\n    column.getGroupedIndex = () => table.getState().grouping?.indexOf(column.id)\n\n    column.getToggleGroupingHandler = () => {\n      const canGroup = column.getCanGroup()\n\n      return () => {\n        if (!canGroup) return\n        column.toggleGrouping()\n      }\n    }\n    column.getAutoAggregationFn = () => {\n      const firstRow = table.getCoreRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'number') {\n        return aggregationFns.sum\n      }\n\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return aggregationFns.extent\n      }\n    }\n    column.getAggregationFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.aggregationFn)\n        ? column.columnDef.aggregationFn\n        : column.columnDef.aggregationFn === 'auto'\n        ? column.getAutoAggregationFn()\n        : table.options.aggregationFns?.[\n            column.columnDef.aggregationFn as string\n          ] ??\n          aggregationFns[column.columnDef.aggregationFn as BuiltInAggregationFn]\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setGrouping = updater => table.options.onGroupingChange?.(updater)\n\n    table.resetGrouping = defaultState => {\n      table.setGrouping(defaultState ? [] : table.initialState?.grouping ?? [])\n    }\n\n    table.getPreGroupedRowModel = () => table.getFilteredRowModel()\n    table.getGroupedRowModel = () => {\n      if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n        table._getGroupedRowModel = table.options.getGroupedRowModel(table)\n      }\n\n      if (table.options.manualGrouping || !table._getGroupedRowModel) {\n        return table.getPreGroupedRowModel()\n      }\n\n      return table._getGroupedRowModel()\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.getIsGrouped = () => !!row.groupingColumnId\n    row.getGroupingValue = columnId => {\n      if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n        return row._groupingValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.columnDef.getGroupingValue) {\n        return row.getValue(columnId)\n      }\n\n      row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(\n        row.original\n      )\n\n      return row._groupingValuesCache[columnId]\n    }\n    row._groupingValuesCache = {}\n  },\n\n  createCell: <TData extends RowData, TValue>(\n    cell: Cell<TData, TValue>,\n    column: Column<TData, TValue>,\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    const getRenderValue = () =>\n      cell.getValue() ?? table.options.renderFallbackValue\n\n    cell.getIsGrouped = () =>\n      column.getIsGrouped() && column.id === row.groupingColumnId\n    cell.getIsPlaceholder = () => !cell.getIsGrouped() && column.getIsGrouped()\n    cell.getIsAggregated = () =>\n      !cell.getIsGrouped() && !cell.getIsPlaceholder() && !!row.subRows?.length\n  },\n}\n\nexport function orderColumns<TData extends RowData>(\n  leafColumns: Column<TData, unknown>[],\n  grouping: string[],\n  groupedColumnMode?: GroupingColumnMode\n) {\n  if (!grouping?.length || !groupedColumnMode) {\n    return leafColumns\n  }\n\n  const nonGroupingColumns = leafColumns.filter(\n    col => !grouping.includes(col.id)\n  )\n\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns\n  }\n\n  const groupingColumns = grouping\n    .map(g => leafColumns.find(col => col.id === g)!)\n    .filter(Boolean)\n\n  return [...groupingColumns, ...nonGroupingColumns]\n}\n","import { TableFeature } from '../core/table'\nimport {\n  OnChangeFn,\n  Updater,\n  Table,\n  Column,\n  Row,\n  Cell,\n  RowData,\n} from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type ColumnPinningPosition = false | 'left' | 'right'\nexport type RowPinningPosition = false | 'top' | 'bottom'\n\nexport interface ColumnPinningState {\n  left?: string[]\n  right?: string[]\n}\n\nexport interface RowPinningState {\n  bottom?: string[]\n  top?: string[]\n}\n\nexport interface ColumnPinningTableState {\n  columnPinning: ColumnPinningState\n}\n\nexport interface RowPinningTableState {\n  rowPinning: RowPinningState\n}\n\nexport interface ColumnPinningOptions {\n  /**\n   * Enables/disables column pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#enablecolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  enableColumnPinning?: boolean\n  /**\n   * Enables/disables all pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#enablepinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  enablePinning?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.columnPinning` changes. This overrides the default internal state management, so you will also need to supply `state.columnPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#oncolumnpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/oncolumnpinningchange)\n   */\n  onColumnPinningChange?: OnChangeFn<ColumnPinningState>\n}\n\nexport interface RowPinningOptions<TData extends RowData> {\n  /**\n   * Enables/disables row pinning for the table. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#enablerowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  enableRowPinning?: boolean | ((row: Row<TData>) => boolean)\n  /**\n   * When `false`, pinned rows will not be visible if they are filtered or paginated out of the table. When `true`, pinned rows will always be visible regardless of filtering or pagination. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#keeppinnedrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  keepPinnedRows?: boolean\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.rowPinning` changes. This overrides the default internal state management, so you will also need to supply `state.rowPinning` from your own managed state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#onrowpinningchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/onrowpinningchange)\n   */\n  onRowPinningChange?: OnChangeFn<RowPinningState>\n}\n\nexport interface ColumnPinningDefaultOptions {\n  onColumnPinningChange: OnChangeFn<ColumnPinningState>\n}\n\nexport interface RowPinningDefaultOptions {\n  onRowPinningChange: OnChangeFn<RowPinningState>\n}\n\nexport interface ColumnPinningColumnDef {\n  /**\n   * Enables/disables column pinning for this column. Defaults to `true`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#enablepinning-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningColumn {\n  /**\n   * Returns whether or not the column can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getcanpin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the column. (`'left'`, `'right'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getispinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getIsPinned: () => ColumnPinningPosition\n  /**\n   * Returns the numeric pinned index of the column within a pinned column group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getpinnedindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a column to the `'left'` or `'right'`, or unpins the column to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#pin)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  pin: (position: ColumnPinningPosition) => void\n}\n\nexport interface ColumnPinningRow<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getcentervisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getCenterVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all left pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getleftvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getLeftVisibleCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf cells in the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getrightvisiblecells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getRightVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface RowPinningRow {\n  /**\n   * Returns whether or not the row can be pinned.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getcanpin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getCanPin: () => boolean\n  /**\n   * Returns the pinned position of the row. (`'top'`, `'bottom'` or `false`)\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getispinned-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getIsPinned: () => RowPinningPosition\n  /**\n   * Returns the numeric pinned index of the row within a pinned row group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getpinnedindex-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getPinnedIndex: () => number\n  /**\n   * Pins a row to the `'top'` or `'bottom'`, or unpins the row to the center if `false` is passed.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#pin-1)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  pin: (\n    position: RowPinningPosition,\n    includeLeafRows?: boolean,\n    includeParentRows?: boolean\n  ) => void\n}\n\nexport interface ColumnPinningInstance<TData extends RowData> {\n  /**\n   * Returns all center pinned (unpinned) leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getcenterleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getCenterLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns whether or not any columns are pinned. Optionally specify to only check for pinned columns in either the `left` or `right` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getissomecolumnspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getIsSomeColumnsPinned: (position?: ColumnPinningPosition) => boolean\n  /**\n   * Returns all left pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getleftleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getLeftLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Returns all right pinned leaf columns.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getrightleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getRightLeafColumns: () => Column<TData, unknown>[]\n  /**\n   * Resets the **columnPinning** state to `initialState.columnPinning`, or `true` can be passed to force a default blank state reset to `{ left: [], right: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#resetcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  resetColumnPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.columnPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#setcolumnpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  setColumnPinning: (updater: Updater<ColumnPinningState>) => void\n}\n\nexport interface RowPinningInstance<TData extends RowData> {\n  _getPinnedRows: (position: 'top' | 'bottom') => Row<TData>[]\n  /**\n   * Returns all bottom pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getbottomrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getBottomRows: () => Row<TData>[]\n  /**\n   * Returns all rows that are not pinned to the top or bottom.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getcenterrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getCenterRows: () => Row<TData>[]\n  /**\n   * Returns whether or not any rows are pinned. Optionally specify to only check for pinned rows in either the `top` or `bottom` position.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#getissomerowspinned)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getIsSomeRowsPinned: (position?: RowPinningPosition) => boolean\n  /**\n   * Returns all top pinned rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#gettoprows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  getTopRows: () => Row<TData>[]\n  /**\n   * Resets the **rowPinning** state to `initialState.rowPinning`, or `true` can be passed to force a default blank state reset to `{ top: [], bottom: [], }`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#resetrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  resetRowPinning: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.rowPinning` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pinning#setrowpinning)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pinning)\n   */\n  setRowPinning: (updater: Updater<RowPinningState>) => void\n}\n\n//\n\nconst getDefaultColumnPinningState = (): ColumnPinningState => ({\n  left: [],\n  right: [],\n})\n\nconst getDefaultRowPinningState = (): RowPinningState => ({\n  top: [],\n  bottom: [],\n})\n\nexport const Pinning: TableFeature = {\n  getInitialState: (state): ColumnPinningTableState & RowPinningState => {\n    return {\n      columnPinning: getDefaultColumnPinningState(),\n      rowPinning: getDefaultRowPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningDefaultOptions & RowPinningDefaultOptions => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table),\n      onRowPinningChange: makeStateUpdater('rowPinning', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.pin = position => {\n      const columnIds = column\n        .getLeafColumns()\n        .map(d => d.id)\n        .filter(Boolean) as string[]\n\n      table.setColumnPinning(old => {\n        if (position === 'right') {\n          return {\n            left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n            right: [\n              ...(old?.right ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n          }\n        }\n\n        if (position === 'left') {\n          return {\n            left: [\n              ...(old?.left ?? []).filter(d => !columnIds?.includes(d)),\n              ...columnIds,\n            ],\n            right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n          }\n        }\n\n        return {\n          left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n          right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n        }\n      })\n    }\n\n    column.getCanPin = () => {\n      const leafColumns = column.getLeafColumns()\n\n      return leafColumns.some(\n        d =>\n          (d.columnDef.enablePinning ?? true) &&\n          (table.options.enableColumnPinning ??\n            table.options.enablePinning ??\n            true)\n      )\n    }\n\n    column.getIsPinned = () => {\n      const leafColumnIds = column.getLeafColumns().map(d => d.id)\n\n      const { left, right } = table.getState().columnPinning\n\n      const isLeft = leafColumnIds.some(d => left?.includes(d))\n      const isRight = leafColumnIds.some(d => right?.includes(d))\n\n      return isLeft ? 'left' : isRight ? 'right' : false\n    }\n\n    column.getPinnedIndex = () => {\n      const position = column.getIsPinned()\n\n      return position\n        ? table.getState().columnPinning?.[position]?.indexOf(column.id) ?? -1\n        : 0\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): void => {\n    row.pin = (position, includeLeafRows, includeParentRows) => {\n      const leafRowIds = includeLeafRows\n        ? row.getLeafRows().map(({ id }) => id)\n        : []\n      const parentRowIds = includeParentRows\n        ? row.getParentRows().map(({ id }) => id)\n        : []\n      const rowIds = new Set([...parentRowIds, row.id, ...leafRowIds])\n\n      table.setRowPinning(old => {\n        if (position === 'bottom') {\n          return {\n            top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n            bottom: [\n              ...(old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n          }\n        }\n\n        if (position === 'top') {\n          return {\n            top: [\n              ...(old?.top ?? []).filter(d => !rowIds?.has(d)),\n              ...Array.from(rowIds),\n            ],\n            bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n          }\n        }\n\n        return {\n          top: (old?.top ?? []).filter(d => !rowIds?.has(d)),\n          bottom: (old?.bottom ?? []).filter(d => !rowIds?.has(d)),\n        }\n      })\n    }\n    row.getCanPin = () => {\n      const { enableRowPinning, enablePinning } = table.options\n      if (typeof enableRowPinning === 'function') {\n        return enableRowPinning(row)\n      }\n      return enableRowPinning ?? enablePinning ?? true\n    }\n    row.getIsPinned = () => {\n      const rowIds = [row.id]\n\n      const { top, bottom } = table.getState().rowPinning\n\n      const isTop = rowIds.some(d => top?.includes(d))\n      const isBottom = rowIds.some(d => bottom?.includes(d))\n\n      return isTop ? 'top' : isBottom ? 'bottom' : false\n    }\n    row.getPinnedIndex = () => {\n      const position = row.getIsPinned()\n      if (!position) return -1\n\n      const visiblePinnedRowIds = table\n        ._getPinnedRows(position)\n        ?.map(({ id }) => id)\n\n      return visiblePinnedRowIds?.indexOf(row.id) ?? -1\n    }\n    row.getCenterVisibleCells = memo(\n      () => [\n        row._getAllVisibleCells(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allCells, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allCells.filter(d => !leftAndRight.includes(d.column.id))\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' && 'row.getCenterVisibleCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n    row.getLeftVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.left, ,],\n      (allCells, left) => {\n        const cells = (left ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'left' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' && 'row.getLeftVisibleCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n    row.getRightVisibleCells = memo(\n      () => [row._getAllVisibleCells(), table.getState().columnPinning.right],\n      (allCells, right) => {\n        const cells = (right ?? [])\n          .map(columnId => allCells.find(cell => cell.column.id === columnId)!)\n          .filter(Boolean)\n          .map(d => ({ ...d, position: 'right' }) as Cell<TData, unknown>)\n\n        return cells\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' && 'row.getRightVisibleCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setColumnPinning = updater =>\n      table.options.onColumnPinningChange?.(updater)\n\n    table.resetColumnPinning = defaultState =>\n      table.setColumnPinning(\n        defaultState\n          ? getDefaultColumnPinningState()\n          : table.initialState?.columnPinning ?? getDefaultColumnPinningState()\n      )\n\n    table.getIsSomeColumnsPinned = position => {\n      const pinningState = table.getState().columnPinning\n\n      if (!position) {\n        return Boolean(pinningState.left?.length || pinningState.right?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table.getLeftLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.left],\n      (allColumns, left) => {\n        return (left ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getLeftLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    )\n\n    table.getRightLeafColumns = memo(\n      () => [table.getAllLeafColumns(), table.getState().columnPinning.right],\n      (allColumns, right) => {\n        return (right ?? [])\n          .map(columnId => allColumns.find(column => column.id === columnId)!)\n          .filter(Boolean)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRightLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    )\n\n    table.getCenterLeafColumns = memo(\n      () => [\n        table.getAllLeafColumns(),\n        table.getState().columnPinning.left,\n        table.getState().columnPinning.right,\n      ],\n      (allColumns, left, right) => {\n        const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n        return allColumns.filter(d => !leftAndRight.includes(d.id))\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getCenterLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    )\n\n    table.setRowPinning = updater => table.options.onRowPinningChange?.(updater)\n\n    table.resetRowPinning = defaultState =>\n      table.setRowPinning(\n        defaultState\n          ? getDefaultRowPinningState()\n          : table.initialState?.rowPinning ?? getDefaultRowPinningState()\n      )\n\n    table.getIsSomeRowsPinned = position => {\n      const pinningState = table.getState().rowPinning\n\n      if (!position) {\n        return Boolean(pinningState.top?.length || pinningState.bottom?.length)\n      }\n      return Boolean(pinningState[position]?.length)\n    }\n\n    table._getPinnedRows = (position: 'top' | 'bottom') =>\n      memo(\n        () => [table.getRowModel().rows, table.getState().rowPinning[position]],\n        (visibleRows, pinnedRowIds) => {\n          const rows =\n            table.options.keepPinnedRows ?? true\n              ? //get all rows that are pinned even if they would not be otherwise visible\n                //account for expanded parent rows, but not pagination or filtering\n                (pinnedRowIds ?? []).map(rowId => {\n                  const row = table.getRow(rowId, true)\n                  return row.getIsAllParentsExpanded() ? row : null\n                })\n              : //else get only visible rows that are pinned\n                (pinnedRowIds ?? []).map(\n                  rowId => visibleRows.find(row => row.id === rowId)!\n                )\n\n          return rows\n            .filter(Boolean)\n            .map(d => ({ ...d, position })) as Row<TData>[]\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'development' &&\n            `row.get${position === 'top' ? 'Top' : 'Bottom'}Rows`,\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      )()\n\n    table.getTopRows = () => table._getPinnedRows('top')\n\n    table.getBottomRows = () => table._getPinnedRows('bottom')\n\n    table.getCenterRows = memo(\n      () => [\n        table.getRowModel().rows,\n        table.getState().rowPinning.top,\n        table.getState().rowPinning.bottom,\n      ],\n      (allRows, top, bottom) => {\n        const topAndBottom = new Set([...(top ?? []), ...(bottom ?? [])])\n        return allRows.filter(d => !topAndBottom.has(d.id))\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'row.getCenterRows',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    )\n  },\n}\n","import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport {\n  BuiltInSortingFn,\n  reSplitAlphaNumeric,\n  sortingFns,\n} from '../sortingFns'\n\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  SortingFns,\n} from '../types'\n\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type SortDirection = 'asc' | 'desc'\n\nexport interface ColumnSort {\n  desc: boolean\n  id: string\n}\n\nexport type SortingState = ColumnSort[]\n\nexport interface SortingTableState {\n  sorting: SortingState\n}\n\nexport interface SortingFn<TData extends RowData> {\n  (rowA: Row<TData>, rowB: Row<TData>, columnId: string): number\n}\n\nexport type CustomSortingFns<TData extends RowData> = Record<\n  string,\n  SortingFn<TData>\n>\n\nexport type SortingFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof SortingFns\n  | BuiltInSortingFn\n  | SortingFn<TData>\n\nexport interface SortingColumnDef<TData extends RowData> {\n  /**\n   * Enables/Disables multi-sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Inverts the order of the sorting for this column. This is useful for values that have an inverted best/worst scale where lower numbers are better, eg. a ranking (1st, 2nd, 3rd) or golf-like scoring\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#invertsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  invertSorting?: boolean\n  /**\n   * Set to `true` for sorting toggles on this column to start in the descending direction.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n  /**\n   * The sorting function to use with this column.\n   * - A `string` referencing a built-in sorting function\n   * - A custom sorting function\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortingFn?: SortingFnOption<TData>\n  /**\n   * - `false`\n   *   - Undefined values will be considered tied and need to be sorted by the next column filter or original index (whichever applies)\n   * - `-1`\n   *   - Undefined values will be sorted with higher priority (ascending) (if ascending, undefined will appear on the beginning of the list)\n   * - `1`\n   *   - Undefined values will be sorted with lower priority (descending) (if ascending, undefined will appear on the end of the list)\n   */\n  sortUndefined?: false | -1 | 1\n}\n\nexport interface SortingColumn<TData extends RowData> {\n  /**\n   * Removes this column from the table's sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#clearsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  clearSorting: () => void\n  /**\n   * Returns a sort direction automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortDir: () => SortDirection\n  /**\n   * Returns a sorting function automatically inferred based on the columns values.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getautosortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getAutoSortingFn: () => SortingFn<TData>\n  /**\n   * Returns whether this column can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcanmultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanMultiSort: () => boolean\n  /**\n   * Returns whether this column can be sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getcansort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getCanSort: () => boolean\n  /**\n   * Returns the first direction that should be used when sorting this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getfirstsortdir)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getFirstSortDir: () => SortDirection\n  /**\n   * Returns the current sort direction of this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getissorted)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getIsSorted: () => false | SortDirection\n  /**\n   * Returns the next sorting order.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getnextsortingorder)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getNextSortingOrder: () => SortDirection | false\n  /**\n   * Returns the index position of this column's sorting within the sorting state\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortIndex: () => number\n  /**\n   * Returns the resolved sorting function to be used for this column\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortingfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortingFn: () => SortingFn<TData>\n  /**\n   * Returns a function that can be used to toggle this column's sorting state. This is useful for attaching a click handler to the column header.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#gettogglesortinghandler)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getToggleSortingHandler: () => undefined | ((event: unknown) => void)\n  /**\n   * Toggles this columns sorting state. If `desc` is provided, it will force the sort direction to that value. If `isMulti` is provided, it will additivity multi-sort the column (or toggle it if it is already sorted).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#togglesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  toggleSorting: (desc?: boolean, isMulti?: boolean) => void\n}\n\ninterface SortingOptionsBase {\n  /**\n   * Enables/disables the ability to remove multi-sorts\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultiremove)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiRemove?: boolean\n  /**\n   * Enables/Disables multi-sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablemultisort)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableMultiSort?: boolean\n  /**\n   * Enables/Disables sorting for the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSorting?: boolean\n  /**\n   * Enables/Disables the ability to remove sorting for the table.\n   * - If `true` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'none' -> ...\n   * - If `false` then changing sort order will circle like: 'none' -> 'desc' -> 'asc' -> 'desc' -> 'asc' -> ...\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#enablesortingremoval)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  enableSortingRemoval?: boolean\n  /**\n   * This function is used to retrieve the sorted row model. If using server-side sorting, this function is not required. To use client-side sorting, pass the exported `getSortedRowModel()` from your adapter to your table or implement your own.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Pass a custom function that will be used to determine if a multi-sort event should be triggered. It is passed the event from the sort toggle handler and should return `true` if the event should trigger a multi-sort.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#ismultisortevent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  isMultiSortEvent?: (e: unknown) => boolean\n  /**\n   * Enables manual sorting for the table. If this is `true`, you will be expected to sort your data before it is passed to the table. This is useful if you are doing server-side sorting.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#manualsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  manualSorting?: boolean\n  /**\n   * Set a maximum number of columns that can be multi-sorted.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#maxmultisortcolcount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  maxMultiSortColCount?: number\n  /**\n   * If provided, this function will be called with an `updaterFn` when `state.sorting` changes. This overrides the default internal state management, so you will need to persist the state change either fully or partially outside of the table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#onsortingchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  onSortingChange?: OnChangeFn<SortingState>\n  /**\n   * If `true`, all sorts will default to descending as their first toggle state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#sortdescfirst)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  sortDescFirst?: boolean\n}\n\ntype ResolvedSortingFns = keyof SortingFns extends never\n  ? {\n      sortingFns?: Record<string, SortingFn<any>>\n    }\n  : {\n      sortingFns: Record<keyof SortingFns, SortingFn<any>>\n    }\n\nexport interface SortingOptions<TData extends RowData>\n  extends SortingOptionsBase,\n    ResolvedSortingFns {}\n\nexport interface SortingInstance<TData extends RowData> {\n  _getSortedRowModel?: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getpresortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getPreSortedRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table after sorting has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#getsortedrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  getSortedRowModel: () => RowModel<TData>\n  /**\n   * Resets the **sorting** state to `initialState.sorting`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#resetsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  resetSorting: (defaultState?: boolean) => void\n  /**\n   * Sets or updates the `state.sorting` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/sorting#setsorting)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/sorting)\n   */\n  setSorting: (updater: Updater<SortingState>) => void\n}\n\n//\n\nexport const Sorting: TableFeature = {\n  getInitialState: (state): SortingTableState => {\n    return {\n      sorting: [],\n      ...state,\n    }\n  },\n\n  getDefaultColumnDef: <TData extends RowData>(): SortingColumnDef<TData> => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingOptions<TData> => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: (e: unknown) => {\n        return (e as MouseEvent).shiftKey\n      },\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): void => {\n    column.getAutoSortingFn = () => {\n      const firstRows = table.getFilteredRowModel().flatRows.slice(10)\n\n      let isString = false\n\n      for (const row of firstRows) {\n        const value = row?.getValue(column.id)\n\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return sortingFns.datetime\n        }\n\n        if (typeof value === 'string') {\n          isString = true\n\n          if (value.split(reSplitAlphaNumeric).length > 1) {\n            return sortingFns.alphanumeric\n          }\n        }\n      }\n\n      if (isString) {\n        return sortingFns.text\n      }\n\n      return sortingFns.basic\n    }\n    column.getAutoSortDir = () => {\n      const firstRow = table.getFilteredRowModel().flatRows[0]\n\n      const value = firstRow?.getValue(column.id)\n\n      if (typeof value === 'string') {\n        return 'asc'\n      }\n\n      return 'desc'\n    }\n    column.getSortingFn = () => {\n      if (!column) {\n        throw new Error()\n      }\n\n      return isFunction(column.columnDef.sortingFn)\n        ? column.columnDef.sortingFn\n        : column.columnDef.sortingFn === 'auto'\n        ? column.getAutoSortingFn()\n        : table.options.sortingFns?.[column.columnDef.sortingFn as string] ??\n          sortingFns[column.columnDef.sortingFn as BuiltInSortingFn]\n    }\n    column.toggleSorting = (desc, multi) => {\n      // if (column.columns.length) {\n      //   column.columns.forEach((c, i) => {\n      //     if (c.id) {\n      //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n      //     }\n      //   })\n      //   return\n      // }\n\n      // this needs to be outside of table.setSorting to be in sync with rerender\n      const nextSortingOrder = column.getNextSortingOrder()\n      const hasManualValue = typeof desc !== 'undefined' && desc !== null\n\n      table.setSorting(old => {\n        // Find any existing sorting for this column\n        const existingSorting = old?.find(d => d.id === column.id)\n        const existingIndex = old?.findIndex(d => d.id === column.id)\n\n        let newSorting: SortingState = []\n\n        // What should we do with this sort action?\n        let sortAction: 'add' | 'remove' | 'toggle' | 'replace'\n        let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc'\n\n        // Multi-mode\n        if (old?.length && column.getCanMultiSort() && multi) {\n          if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'add'\n          }\n        } else {\n          // Normal mode\n          if (old?.length && existingIndex !== old.length - 1) {\n            sortAction = 'replace'\n          } else if (existingSorting) {\n            sortAction = 'toggle'\n          } else {\n            sortAction = 'replace'\n          }\n        }\n\n        // Handle toggle states that will remove the sorting\n        if (sortAction === 'toggle') {\n          // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n          if (!hasManualValue) {\n            // Is our intention to remove?\n            if (!nextSortingOrder) {\n              sortAction = 'remove'\n            }\n          }\n        }\n\n        if (sortAction === 'add') {\n          newSorting = [\n            ...old,\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n          // Take latest n columns\n          newSorting.splice(\n            0,\n            newSorting.length -\n              (table.options.maxMultiSortColCount ?? Number.MAX_SAFE_INTEGER)\n          )\n        } else if (sortAction === 'toggle') {\n          // This flips (or sets) the\n          newSorting = old.map(d => {\n            if (d.id === column.id) {\n              return {\n                ...d,\n                desc: nextDesc,\n              }\n            }\n            return d\n          })\n        } else if (sortAction === 'remove') {\n          newSorting = old.filter(d => d.id !== column.id)\n        } else {\n          newSorting = [\n            {\n              id: column.id,\n              desc: nextDesc,\n            },\n          ]\n        }\n\n        return newSorting\n      })\n    }\n\n    column.getFirstSortDir = () => {\n      const sortDescFirst =\n        column.columnDef.sortDescFirst ??\n        table.options.sortDescFirst ??\n        column.getAutoSortDir() === 'desc'\n      return sortDescFirst ? 'desc' : 'asc'\n    }\n\n    column.getNextSortingOrder = (multi?: boolean) => {\n      const firstSortDirection = column.getFirstSortDir()\n      const isSorted = column.getIsSorted()\n\n      if (!isSorted) {\n        return firstSortDirection\n      }\n\n      if (\n        isSorted !== firstSortDirection &&\n        (table.options.enableSortingRemoval ?? true) && // If enableSortRemove, enable in general\n        (multi ? table.options.enableMultiRemove ?? true : true) // If multi, don't allow if enableMultiRemove))\n      ) {\n        return false\n      }\n      return isSorted === 'desc' ? 'asc' : 'desc'\n    }\n\n    column.getCanSort = () => {\n      return (\n        (column.columnDef.enableSorting ?? true) &&\n        (table.options.enableSorting ?? true) &&\n        !!column.accessorFn\n      )\n    }\n\n    column.getCanMultiSort = () => {\n      return (\n        column.columnDef.enableMultiSort ??\n        table.options.enableMultiSort ??\n        !!column.accessorFn\n      )\n    }\n\n    column.getIsSorted = () => {\n      const columnSort = table.getState().sorting?.find(d => d.id === column.id)\n\n      return !columnSort ? false : columnSort.desc ? 'desc' : 'asc'\n    }\n\n    column.getSortIndex = () =>\n      table.getState().sorting?.findIndex(d => d.id === column.id) ?? -1\n\n    column.clearSorting = () => {\n      //clear sorting for just 1 column\n      table.setSorting(old =>\n        old?.length ? old.filter(d => d.id !== column.id) : []\n      )\n    }\n\n    column.getToggleSortingHandler = () => {\n      const canSort = column.getCanSort()\n\n      return (e: unknown) => {\n        if (!canSort) return\n        ;(e as any).persist?.()\n        column.toggleSorting?.(\n          undefined,\n          column.getCanMultiSort() ? table.options.isMultiSortEvent?.(e) : false\n        )\n      }\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    table.setSorting = updater => table.options.onSortingChange?.(updater)\n    table.resetSorting = defaultState => {\n      table.setSorting(defaultState ? [] : table.initialState?.sorting ?? [])\n    }\n    table.getPreSortedRowModel = () => table.getGroupedRowModel()\n    table.getSortedRowModel = () => {\n      if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n        table._getSortedRowModel = table.options.getSortedRowModel(table)\n      }\n\n      if (table.options.manualSorting || !table._getSortedRowModel) {\n        return table.getPreSortedRowModel()\n      }\n\n      return table._getSortedRowModel()\n    }\n  },\n}\n","import { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, RowModel, Updater, RowData } from '../types'\nimport { functionalUpdate, makeStateUpdater, memo } from '../utils'\n\nexport interface PaginationState {\n  pageIndex: number\n  pageSize: number\n}\n\nexport interface PaginationTableState {\n  pagination: PaginationState\n}\n\nexport interface PaginationInitialTableState {\n  pagination?: Partial<PaginationState>\n}\n\nexport interface PaginationOptions {\n  /**\n   * If set to `true`, pagination will be reset to the first page when page-altering state changes eg. `data` is updated, filters change, grouping changes, etc.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#autoresetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  autoResetPageIndex?: boolean\n  /**\n   * Returns the row model after pagination has taken place, but no further.\n   *\n   * Pagination columns are automatically reordered by default to the start of the columns list. If you would rather remove them or leave them as-is, set the appropriate mode here.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel?: (table: Table<any>) => () => RowModel<any>\n  /**\n   * Enables manual pagination. If this option is set to `true`, the table will not automatically paginate rows using `getPaginationRowModel()` and instead will expect you to manually paginate the rows before passing them to the table. This is useful if you are doing server-side pagination and aggregation.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#manualpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  manualPagination?: boolean\n  /**\n   * If this function is provided, it will be called when the pagination state changes and you will be expected to manage the state yourself. You can pass the managed state back to the table via the `tableOptions.state.pagination` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#onpaginationchange)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  onPaginationChange?: OnChangeFn<PaginationState>\n  /**\n   * When manually controlling pagination, you should supply a total `pageCount` value to the table if you know it. If you do not know how many pages there are, you can set this to `-1`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#pagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  pageCount?: number\n}\n\nexport interface PaginationDefaultOptions {\n  onPaginationChange: OnChangeFn<PaginationState>\n}\n\nexport interface PaginationInstance<TData extends RowData> {\n  _autoResetPageIndex: () => void\n  _getPaginationRowModel?: () => RowModel<TData>\n  /**\n   * Returns whether the table can go to the next page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcannextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanNextPage: () => boolean\n  /**\n   * Returns whether the table can go to the previous page.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getcanpreviouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getCanPreviousPage: () => boolean\n  /**\n   * Returns the page count. If manually paginating or controlling the pagination state, this will come directly from the `options.pageCount` table option, otherwise it will be calculated from the table data using the total row count and current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageCount: () => number\n  /**\n   * Returns an array of page options (zero-index-based) for the current page size.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpageoptions)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPageOptions: () => number[]\n  /**\n   * Returns the row model for the table after pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getpaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPaginationRowModel: () => RowModel<TData>\n  /**\n   * Returns the row model for the table before any pagination has been applied.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#getprepaginationrowmodel)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  getPrePaginationRowModel: () => RowModel<TData>\n  /**\n   * Increments the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#nextpage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  nextPage: () => void\n  /**\n   * Decrements the page index by one, if possible.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#previouspage)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  previousPage: () => void\n  /**\n   * Resets the page index to its initial state. If `defaultState` is `true`, the page index will be reset to `0` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageIndex: (defaultState?: boolean) => void\n  /**\n   * Resets the page size to its initial state. If `defaultState` is `true`, the page size will be reset to `10` regardless of initial state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPageSize: (defaultState?: boolean) => void\n  /**\n   * Resets the **pagination** state to `initialState.pagination`, or `true` can be passed to force a default blank state reset to `[]`.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#resetpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  resetPagination: (defaultState?: boolean) => void\n  /**\n   * Updates the page count using the provided function or value.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagecount)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageCount: (updater: Updater<number>) => void\n  /**\n   * Updates the page index using the provided function or value in the `state.pagination.pageIndex` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpageindex)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageIndex: (updater: Updater<number>) => void\n  /**\n   * Updates the page size using the provided function or value in the `state.pagination.pageSize` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagesize)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPageSize: (updater: Updater<number>) => void\n  /**\n   * Sets or updates the `state.pagination` state.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/features/pagination#setpagination)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/pagination)\n   */\n  setPagination: (updater: Updater<PaginationState>) => void\n}\n\n//\n\nconst defaultPageIndex = 0\nconst defaultPageSize = 10\n\nconst getDefaultPaginationState = (): PaginationState => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize,\n})\n\nexport const Pagination: TableFeature = {\n  getInitialState: (state): PaginationTableState => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...state?.pagination,\n      },\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationDefaultOptions => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(table: Table<TData>): void => {\n    let registered = false\n    let queued = false\n\n    table._autoResetPageIndex = () => {\n      if (!registered) {\n        table._queue(() => {\n          registered = true\n        })\n        return\n      }\n\n      if (\n        table.options.autoResetAll ??\n        table.options.autoResetPageIndex ??\n        !table.options.manualPagination\n      ) {\n        if (queued) return\n        queued = true\n        table._queue(() => {\n          table.resetPageIndex()\n          queued = false\n        })\n      }\n    }\n    table.setPagination = updater => {\n      const safeUpdater: Updater<PaginationState> = old => {\n        let newState = functionalUpdate(updater, old)\n\n        return newState\n      }\n\n      return table.options.onPaginationChange?.(safeUpdater)\n    }\n    table.resetPagination = defaultState => {\n      table.setPagination(\n        defaultState\n          ? getDefaultPaginationState()\n          : table.initialState.pagination ?? getDefaultPaginationState()\n      )\n    }\n    table.setPageIndex = updater => {\n      table.setPagination(old => {\n        let pageIndex = functionalUpdate(updater, old.pageIndex)\n\n        const maxPageIndex =\n          typeof table.options.pageCount === 'undefined' ||\n          table.options.pageCount === -1\n            ? Number.MAX_SAFE_INTEGER\n            : table.options.pageCount - 1\n\n        pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex))\n\n        return {\n          ...old,\n          pageIndex,\n        }\n      })\n    }\n    table.resetPageIndex = defaultState => {\n      table.setPageIndex(\n        defaultState\n          ? defaultPageIndex\n          : table.initialState?.pagination?.pageIndex ?? defaultPageIndex\n      )\n    }\n    table.resetPageSize = defaultState => {\n      table.setPageSize(\n        defaultState\n          ? defaultPageSize\n          : table.initialState?.pagination?.pageSize ?? defaultPageSize\n      )\n    }\n    table.setPageSize = updater => {\n      table.setPagination(old => {\n        const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize))\n        const topRowIndex = old.pageSize * old.pageIndex!\n        const pageIndex = Math.floor(topRowIndex / pageSize)\n\n        return {\n          ...old,\n          pageIndex,\n          pageSize,\n        }\n      })\n    }\n    table.setPageCount = updater =>\n      table.setPagination(old => {\n        let newPageCount = functionalUpdate(\n          updater,\n          table.options.pageCount ?? -1\n        )\n\n        if (typeof newPageCount === 'number') {\n          newPageCount = Math.max(-1, newPageCount)\n        }\n\n        return {\n          ...old,\n          pageCount: newPageCount,\n        }\n      })\n\n    table.getPageOptions = memo(\n      () => [table.getPageCount()],\n      pageCount => {\n        let pageOptions: number[] = []\n        if (pageCount && pageCount > 0) {\n          pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i)\n        }\n        return pageOptions\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getPageOptions',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n\n    table.getCanPreviousPage = () => table.getState().pagination.pageIndex > 0\n\n    table.getCanNextPage = () => {\n      const { pageIndex } = table.getState().pagination\n\n      const pageCount = table.getPageCount()\n\n      if (pageCount === -1) {\n        return true\n      }\n\n      if (pageCount === 0) {\n        return false\n      }\n\n      return pageIndex < pageCount - 1\n    }\n\n    table.previousPage = () => {\n      return table.setPageIndex(old => old - 1)\n    }\n\n    table.nextPage = () => {\n      return table.setPageIndex(old => {\n        return old + 1\n      })\n    }\n\n    table.getPrePaginationRowModel = () => table.getExpandedRowModel()\n    table.getPaginationRowModel = () => {\n      if (\n        !table._getPaginationRowModel &&\n        table.options.getPaginationRowModel\n      ) {\n        table._getPaginationRowModel =\n          table.options.getPaginationRowModel(table)\n      }\n\n      if (table.options.manualPagination || !table._getPaginationRowModel) {\n        return table.getPrePaginationRowModel()\n      }\n\n      return table._getPaginationRowModel()\n    }\n\n    table.getPageCount = () => {\n      return (\n        table.options.pageCount ??\n        Math.ceil(\n          table.getPrePaginationRowModel().rows.length /\n            table.getState().pagination.pageSize\n        )\n      )\n    }\n  },\n}\n","import {\n  Column,\n  Table,\n  AccessorFn,\n  ColumnDef,\n  RowData,\n  ColumnDefResolved,\n} from '../types'\nimport { memo } from '../utils'\n\nexport interface CoreColumn<TData extends RowData, TValue> {\n  /**\n   * The resolved accessor function to use when extracting the value for the column from each row. Will only be defined if the column def has a valid accessor key or function defined.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#accessorfn)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  accessorFn?: AccessorFn<TData, TValue>\n  /**\n   * The original column def used to create the column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columndef)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columnDef: ColumnDef<TData, TValue>\n  /**\n   * The child column (if the column is a group column). Will be an empty array if the column is not a group column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#columns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  columns: Column<TData, TValue>[]\n  /**\n   * The depth of the column (if grouped) relative to the root column def array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  depth: number\n  /**\n   * Returns the flattened array of this column and all child/grand-child columns for this column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getflatcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getFlatColumns: () => Column<TData, TValue>[]\n  /**\n   * Returns an array of all leaf-node columns for this column. If a column has no children, it is considered the only leaf-node column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#getleafcolumns)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  getLeafColumns: () => Column<TData, TValue>[]\n  /**\n   * The resolved unique identifier for the column resolved in this priority:\n      - A manual `id` property from the column def\n      - The accessor key from the column def\n      - The header string from the column def\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  id: string\n  /**\n   * The parent column for this column. Will be undefined if this is a root column.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/column#parent)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/column-defs)\n   */\n  parent?: Column<TData, TValue>\n}\n\nexport function createColumn<TData extends RowData, TValue>(\n  table: Table<TData>,\n  columnDef: ColumnDef<TData, TValue>,\n  depth: number,\n  parent?: Column<TData, TValue>\n): Column<TData, TValue> {\n  const defaultColumn = table._getDefaultColumnDef()\n\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef,\n  } as ColumnDefResolved<TData>\n\n  const accessorKey = resolvedColumnDef.accessorKey\n\n  let id =\n    resolvedColumnDef.id ??\n    (accessorKey ? accessorKey.replace('.', '_') : undefined) ??\n    (typeof resolvedColumnDef.header === 'string'\n      ? resolvedColumnDef.header\n      : undefined)\n\n  let accessorFn: AccessorFn<TData> | undefined\n\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = (originalRow: TData) => {\n        let result = originalRow as Record<string, any>\n\n        for (const key of accessorKey.split('.')) {\n          result = result?.[key]\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(\n              `\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`\n            )\n          }\n        }\n\n        return result\n      }\n    } else {\n      accessorFn = (originalRow: TData) =>\n        (originalRow as any)[resolvedColumnDef.accessorKey]\n    }\n  }\n\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        resolvedColumnDef.accessorFn\n          ? `Columns require an id when using an accessorFn`\n          : `Columns require an id when using a non-string header`\n      )\n    }\n    throw new Error()\n  }\n\n  let column: CoreColumn<TData, any> = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent as any,\n    depth,\n    columnDef: resolvedColumnDef as ColumnDef<TData, any>,\n    columns: [],\n    getFlatColumns: memo(\n      () => [true],\n      () => {\n        return [\n          column as Column<TData, TValue>,\n          ...column.columns?.flatMap(d => d.getFlatColumns()),\n        ]\n      },\n      {\n        key: process.env.NODE_ENV === 'production' && 'column.getFlatColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n    getLeafColumns: memo(\n      () => [table._getOrderColumnsFn()],\n      orderColumns => {\n        if (column.columns?.length) {\n          let leafColumns = column.columns.flatMap(column =>\n            column.getLeafColumns()\n          )\n\n          return orderColumns(leafColumns)\n        }\n\n        return [column as Column<TData, TValue>]\n      },\n      {\n        key: process.env.NODE_ENV === 'production' && 'column.getLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n  }\n\n  for (const feature of table._features) {\n    feature.createColumn?.(column, table)\n  }\n\n  // Yes, we have to convert table to uknown, because we know more than the compiler here.\n  return column as Column<TData, TValue>\n}\n","import { RowData, Cell, Row, Table } from '../types'\nimport { flattenBy, memo } from '../utils'\nimport { createCell } from './cell'\n\nexport interface CoreRow<TData extends RowData> {\n  _getAllCellsByColumnId: () => Record<string, Cell<TData, unknown>>\n  _uniqueValuesCache: Record<string, unknown>\n  _valuesCache: Record<string, unknown>\n  /**\n   * The depth of the row (if nested or grouped) relative to the root row array.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#depth)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  depth: number\n  /**\n   * Returns all of the cells for the row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getallcells)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getAllCells: () => Cell<TData, unknown>[]\n  /**\n   * Returns the leaf rows for the row, not including any parent rows.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getleafrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getLeafRows: () => Row<TData>[]\n  /**\n   * Returns the parent row for the row, if it exists.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrow)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRow: () => Row<TData> | undefined\n  /**\n   * Returns the parent rows for the row, all the way up to a root row.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getparentrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getParentRows: () => Row<TData>[]\n  /**\n   * Returns a unique array of values from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getuniquevalues)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getUniqueValues: <TValue>(columnId: string) => TValue[]\n  /**\n   * Returns the value from the row for a given columnId.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  getValue: <TValue>(columnId: string) => TValue\n  /**\n   * The resolved unique identifier for the row resolved via the `options.getRowId` option. Defaults to the row's index (or relative index if it is a subRow).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  id: string\n  /**\n   * The index of the row within its parent array (or the root data array).\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#index)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  index: number\n  /**\n   * The original row object provided to the table. If the row is a grouped row, the original row object will be the first original in the group.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#original)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  original: TData\n  /**\n   * An array of the original subRows as returned by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#originalsubrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  originalSubRows?: TData[]\n  /**\n   * If nested, this row's parent row id.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#parentid)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  parentId?: string\n  /**\n   * Renders the value for the row in a given columnId the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  renderValue: <TValue>(columnId: string) => TValue\n  /**\n   * An array of subRows for the row as returned and created by the `options.getSubRows` option.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/row#subrows)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/rows)\n   */\n  subRows: Row<TData>[]\n}\n\nexport const createRow = <TData extends RowData>(\n  table: Table<TData>,\n  id: string,\n  original: TData,\n  rowIndex: number,\n  depth: number,\n  subRows?: Row<TData>[],\n  parentId?: string\n): Row<TData> => {\n  let row: CoreRow<TData> = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      row._valuesCache[columnId] = column.accessorFn(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._valuesCache[columnId] as any\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)]\n        return row._uniqueValuesCache[columnId]\n      }\n\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._uniqueValuesCache[columnId] as any\n    },\n    renderValue: columnId =>\n      row.getValue(columnId) ?? table.options.renderFallbackValue,\n    subRows: subRows ?? [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () => (row.parentId ? table.getRow(row.parentId, true) : undefined),\n    getParentRows: () => {\n      let parentRows: Row<TData>[] = []\n      let currentRow = row\n      while (true) {\n        const parentRow = currentRow.getParentRow()\n        if (!parentRow) break\n        parentRows.push(parentRow)\n        currentRow = parentRow\n      }\n      return parentRows.reverse()\n    },\n    getAllCells: memo(\n      () => [table.getAllLeafColumns()],\n      leafColumns => {\n        return leafColumns.map(column => {\n          return createCell(table, row as Row<TData>, column, column.id)\n        })\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'row.getAllCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    ),\n\n    _getAllCellsByColumnId: memo(\n      () => [row.getAllCells()],\n      allCells => {\n        return allCells.reduce(\n          (acc, cell) => {\n            acc[cell.column.id] = cell\n            return acc\n          },\n          {} as Record<string, Cell<TData, unknown>>\n        )\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'production' && 'row.getAllCellsByColumnId',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    ),\n  }\n\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i]\n    feature?.createRow?.(row, table)\n  }\n\n  return row as Row<TData>\n}\n","import { RowData, Cell, Column, Row, Table } from '../types'\nimport { Getter, memo } from '../utils'\n\nexport interface CellContext<TData extends RowData, TValue> {\n  cell: Cell<TData, TValue>\n  column: Column<TData, TValue>\n  getValue: Getter<TValue>\n  renderValue: Getter<TValue | null>\n  row: Row<TData>\n  table: Table<TData>\n}\n\nexport interface CoreCell<TData extends RowData, TValue> {\n  /**\n   * The associated Column object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#column)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  column: Column<TData, TValue>\n  /**\n   * Returns the rendering context (or props) for cell-based components like cells and aggregated cells. Use these props with your framework's `flexRender` utility to render these using the template of your choice:\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getcontext)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getContext: () => CellContext<TData, TValue>\n  /**\n   * Returns the value for the cell, accessed via the associated column's accessor key or accessor function.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#getvalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  getValue: CellContext<TData, TValue>['getValue']\n  /**\n   * The unique ID for the cell across the entire table.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#id)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  id: string\n  /**\n   * Renders the value for a cell the same as `getValue`, but will return the `renderFallbackValue` if no value is found.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#rendervalue)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  renderValue: CellContext<TData, TValue>['renderValue']\n  /**\n   * The associated Row object for the cell.\n   * @link [API Docs](https://tanstack.com/table/v8/docs/api/core/cell#row)\n   * @link [Guide](https://tanstack.com/table/v8/docs/guide/cells)\n   */\n  row: Row<TData>\n}\n\nexport function createCell<TData extends RowData, TValue>(\n  table: Table<TData>,\n  row: Row<TData>,\n  column: Column<TData, TValue>,\n  columnId: string\n): Cell<TData, TValue> {\n  const getRenderValue = () =>\n    cell.getValue() ?? table.options.renderFallbackValue\n\n  const cell: CoreCell<TData, TValue> = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(\n      () => [table, column, row, cell],\n      (table, column, row, cell) => ({\n        table,\n        column,\n        row,\n        cell: cell as Cell<TData, TValue>,\n        getValue: cell.getValue,\n        renderValue: cell.renderValue,\n      }),\n      {\n        key: process.env.NODE_ENV === 'development' && 'cell.getContext',\n        debug: () => table.options.debugAll,\n      }\n    ),\n  }\n\n  table._features.forEach(feature => {\n    feature.createCell?.(\n      cell as Cell<TData, TValue>,\n      column,\n      row as Row<TData>,\n      table\n    )\n  }, {})\n\n  return cell as Cell<TData, TValue>\n}\n","import {\n  AccessorFn,\n  ColumnDef,\n  DisplayColumnDef,\n  GroupColumnDef,\n  IdentifiedColumnDef,\n  RowData,\n} from './types'\nimport { DeepKeys, DeepValue } from './utils'\n\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nexport type ColumnHelper<TData extends RowData> = {\n  accessor: <\n    TAccessor extends AccessorFn<TData> | DeepKeys<TData>,\n    TValue extends TAccessor extends AccessorFn<TData, infer TReturn>\n      ? TReturn\n      : TAccessor extends DeepKeys<TData>\n      ? DeepValue<TData, TAccessor>\n      : never,\n  >(\n    accessor: TAccessor,\n    column: TAccessor extends AccessorFn<TData>\n      ? DisplayColumnDef<TData, TValue>\n      : IdentifiedColumnDef<TData, TValue>\n  ) => ColumnDef<TData, TValue>\n  display: (column: DisplayColumnDef<TData>) => ColumnDef<TData, unknown>\n  group: (column: GroupColumnDef<TData>) => ColumnDef<TData, unknown>\n}\n\nexport function createColumnHelper<\n  TData extends RowData,\n>(): ColumnHelper<TData> {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function'\n        ? ({\n            ...column,\n            accessorFn: accessor,\n          } as any)\n        : {\n            ...column,\n            accessorKey: accessor,\n          }\n    },\n    display: column => column as ColumnDef<TData, unknown>,\n    group: column => column as ColumnDef<TData, unknown>,\n  }\n}\n","import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { memo } from '../utils'\n\nexport function getCoreRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.options.data],\n      (\n        data\n      ): {\n        rows: Row<TData>[]\n        flatRows: Row<TData>[]\n        rowsById: Record<string, Row<TData>>\n      } => {\n        const rowModel: RowModel<TData> = {\n          rows: [],\n          flatRows: [],\n          rowsById: {},\n        }\n\n        const accessRows = (\n          originalRows: TData[],\n          depth = 0,\n          parentRow?: Row<TData>\n        ): Row<TData>[] => {\n          const rows = [] as Row<TData>[]\n\n          for (let i = 0; i < originalRows.length; i++) {\n            // This could be an expensive check at scale, so we should move it somewhere else, but where?\n            // if (!id) {\n            //   if (process.env.NODE_ENV !== 'production') {\n            //     throw new Error(`getRowId expected an ID, but got ${id}`)\n            //   }\n            // }\n\n            // Make the row\n            const row = createRow(\n              table,\n              table._getRowId(originalRows[i]!, i, parentRow),\n              originalRows[i]!,\n              i,\n              depth,\n              undefined,\n              parentRow?.id\n            )\n\n            // Keep track of every row in a flat array\n            rowModel.flatRows.push(row)\n            // Also keep track of every row by its ID\n            rowModel.rowsById[row.id] = row\n            // Push table row into parent\n            rows.push(row)\n\n            // Get the original subrows\n            if (table.options.getSubRows) {\n              row.originalSubRows = table.options.getSubRows(\n                originalRows[i]!,\n                i\n              )\n\n              // Then recursively access them\n              if (row.originalSubRows?.length) {\n                row.subRows = accessRows(row.originalSubRows, depth + 1, row)\n              }\n            }\n          }\n\n          return rows\n        }\n\n        rowModel.rows = accessRows(data)\n\n        return rowModel\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._autoResetPageIndex()\n        },\n      }\n    )\n}\n","import { Table, Row, RowModel, RowData } from '../types'\nimport { SortingFn } from '../features/Sorting'\nimport { memo } from '../utils'\n\nexport function getSortedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().sorting, table.getPreSortedRowModel()],\n      (sorting, rowModel) => {\n        if (!rowModel.rows.length || !sorting?.length) {\n          return rowModel\n        }\n\n        const sortingState = table.getState().sorting\n\n        const sortedFlatRows: Row<TData>[] = []\n\n        // Filter out sortings that correspond to non existing columns\n        const availableSorting = sortingState.filter(sort =>\n          table.getColumn(sort.id)?.getCanSort()\n        )\n\n        const columnInfoById: Record<\n          string,\n          {\n            sortUndefined?: false | -1 | 1\n            invertSorting?: boolean\n            sortingFn: SortingFn<TData>\n          }\n        > = {}\n\n        availableSorting.forEach(sortEntry => {\n          const column = table.getColumn(sortEntry.id)\n          if (!column) return\n\n          columnInfoById[sortEntry.id] = {\n            sortUndefined: column.columnDef.sortUndefined,\n            invertSorting: column.columnDef.invertSorting,\n            sortingFn: column.getSortingFn(),\n          }\n        })\n\n        const sortData = (rows: Row<TData>[]) => {\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          const sortedData = rows.map(row => ({...row}))\n\n          sortedData.sort((rowA, rowB) => {\n            for (let i = 0; i < availableSorting.length; i += 1) {\n              const sortEntry = availableSorting[i]!\n              const columnInfo = columnInfoById[sortEntry.id]!\n              const isDesc = sortEntry?.desc ?? false\n\n              let sortInt = 0\n\n              // All sorting ints should always return in ascending order\n              if (columnInfo.sortUndefined) {\n                const aValue = rowA.getValue(sortEntry.id)\n                const bValue = rowB.getValue(sortEntry.id)\n\n                const aUndefined = aValue === undefined\n                const bUndefined = bValue === undefined\n\n                if (aUndefined || bUndefined) {\n                  sortInt =\n                    aUndefined && bUndefined\n                      ? 0\n                      : aUndefined\n                      ? columnInfo.sortUndefined\n                      : -columnInfo.sortUndefined\n                }\n              }\n\n              if (sortInt === 0) {\n                sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id)\n              }\n\n              // If sorting is non-zero, take care of desc and inversion\n              if (sortInt !== 0) {\n                if (isDesc) {\n                  sortInt *= -1\n                }\n\n                if (columnInfo.invertSorting) {\n                  sortInt *= -1\n                }\n\n                return sortInt\n              }\n            }\n\n            return rowA.index - rowB.index\n          })\n\n          // If there are sub-rows, sort them\n          sortedData.forEach(row => {\n            sortedFlatRows.push(row)\n            if (row.subRows?.length) {\n              row.subRows = sortData(row.subRows)\n            }\n          })\n\n          return sortedData\n        }\n\n        return {\n          rows: sortData(rowModel.rows),\n          flatRows: sortedFlatRows,\n          rowsById: rowModel.rowsById,\n        }\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getSortedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._autoResetPageIndex()\n        },\n      }\n    )\n}\n"],"names":["uncheckedIcon","React","viewBox","height","width","style","position","top","d","fill","fillRule","checkedIcon","convertShorthandColor","color","length","sixDigitColor","i","getBackgroundColor","pos","checkedPos","uncheckedPos","offColor","onColor","relativePos","newColor","offComponent","parseInt","substr","onComponent","newComponent","Math","round","toString","createBackgroundColor","hexColorPropType","props","propName","componentName","prop","Error","Symbol","iterator","asyncIterator","_catch","body","recover","result","e","then","ReactSwitch","_ref","checked","disabled","className","offHandleColor","onHandleColor","checkedHandleIcon","uncheckedHandleIcon","boxShadow","activeBoxShadow","borderRadius","handleDiameter","backgroundStyleProp","handleStyleProp","rest","_objectWithoutPropertiesLoose","_excluded","_useAsyncExtendedStat","initialState","_useState","useState","state","setState","asyncSetState","useMemo","nextState","initialNextState","Promise","resolve","_temp2","_result","_temp","_nextState","asyncExtendState","extendState","initialExtendState","_temp4","_result3","_extends","_temp3","_extendState","useAsyncExtendedState","$isMounted","$inputRef","uiVals","$handleDiameter","$checkedPos","max","$uncheckedPos","$lastDragAt","$lastKeyUpAt","$pos","$onDragStart","clientX","current","focus","$startX","$hasOutline","$dragStartingTime","Date","now","$onDrag","$isDragging","mousePos","newPos","min","$onDragStop","event","halfwayCheckpoint","prevPos","timeSinceStart","$onChange","$onMouseMove","preventDefault","$onMouseUp","window","removeEventListener","$unsetHasOutline","onChange","id","backgroundStyle","margin","background","cursor","WebkitTransition","MozTransition","transition","checkedIconStyle","opacity","pointerEvents","uncheckedIconStyle","right","handleStyle","display","transform","outline","border","uncheckedHandleIconStyle","left","checkedHandleIconStyle","rootStyle","textAlign","direction","touchAction","WebkitTapHighlightColor","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","onClick","onMouseDown","button","addEventListener","onTouchStart","$checkedStateFromDragging","touches","onTouchMove","onTouchEnd","onTouchCancel","type","role","clip","overflow","padding","ref","onFocus","onBlur","onKeyUp","propTypes","PropTypes","isRequired","defaultProps","reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","KNOWN_STATICS","name","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","key","descriptor","b","for","c","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","location","propFullName","secret","err","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","_typeof","o","constructor","toPropertyKey","toPrimitive","call","TypeError","String","Number","_defineProperty","obj","value","enumerable","configurable","writable","ownKeys","filter","push","apply","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","slice","from","test","_slicedToArray","isArray","next","done","_objectWithoutProperties","source","excluded","target","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","_defineProperties","_setPrototypeOf","setPrototypeOf","bind","__proto__","_getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","Super","NewTarget","this","_toConsumableArray","iter","StyleSheet","options","_this","_insertTag","tag","before","tags","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","isSpeedy","undefined","speedy","ctr","nonce","_proto","hydrate","nodes","insert","rule","document","createElement","setAttribute","appendChild","createTextNode","createStyleElement","sheet","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","process","flush","parentNode","removeChild","abs","fromCharCode","assign","trim","replace","pattern","replacement","indexof","search","charat","index","charCodeAt","begin","end","strlen","sizeof","append","line","column","character","characters","root","parent","children","return","copy","prev","peek","caret","token","alloc","dealloc","delimit","delimiter","whitespace","escaping","count","commenter","identifier","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","KEYFRAMES","serialize","callback","output","stringify","join","compile","parse","rules","rulesets","pseudo","points","declarations","offset","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","size","j","identifierWithPointTracking","getRules","parsed","toRules","fixedElements","WeakMap","compat","isImplicitRule","get","set","parentRules","removeLabel","prefix","hash","defaultStylisPlugins","map","combine","exec","match","createCache","ssrStyles","querySelectorAll","getAttribute","head","stylisPlugins","_insert","inserted","nodesToHydrate","attrib","split","currentSheet","finalizingPlugins","serializer","collection","middleware","selector","serialized","shouldCache","styles","cache","registered","registerStyles","isStringTag","unitlessKeys","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","fn","create","arg","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","toLowerCase","processStyleValue","p1","p2","unitless","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","_key","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","str","hashString","useInsertionEffect","useInsertionEffectAlwaysWithSyncFallback","hasOwnProperty","EmotionCacheContext","HTMLElement","Provider","withEmotionCache","forwardRef","useContext","ThemeContext","typePropName","Insertion","insertStyles","Emotion","cssProp","css","WrappedComponent","registeredStyles","classNames","rawClassName","getRegisteredStyles","newProps","Emotion$1","jsx","argsLength","createElementArgArray","createEmotionProps","_len","floor","createCoords","rectToClientRect","rect","bottom","getNodeName","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","getDocumentElement","documentElement","Node","isHTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","getComputedStyle","includes","isWebKit","CSS","supports","isLastTraversableNode","getParentNode","assignedSlot","host","getNearestOverflowAncestor","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","contextElement","getScale","domElement","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","autoUpdate","floating","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","ancestor","passive","cleanupIo","onMove","timeoutId","io","cleanup","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","clientWidth","clientHeight","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","prevRefRect","frameLoop","nextRefRect","useLayoutEffect","insertable","freeze","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","memoized","newArgs","lastThis","lastArgs","lastResult","clear","subClass","superClass","Constructor","protoProps","staticProps","instance","StateManagedSelect","baseSelectProps","_ref$defaultInputValu","defaultInputValue","_ref$defaultMenuIsOpe","defaultMenuIsOpen","_ref$defaultValue","defaultValue","propsInputValue","inputValue","propsMenuIsOpen","menuIsOpen","propsOnChange","propsOnInputChange","onInputChange","propsOnMenuClose","onMenuClose","propsOnMenuOpen","onMenuOpen","propsValue","restSelectProps","_useState2","stateInputValue","setStateInputValue","_useState4","stateMenuIsOpen","setStateMenuIsOpen","_useState6","stateValue","setStateValue","useCallback","actionMeta","newValue","_objectSpread","useStateManager","Select","StateManagedSelect$1","flexRender","Comp","proto","isReactComponent","isClassComponent","description","isExoticComponent","useReactTable","resolvedOptions","onStateChange","renderFallbackValue","tableRef","createTable","setOptions","updater","functionalUpdate","input","makeStateUpdater","old","isFunction","Function","flattenBy","getChildren","flat","recurse","subArr","item","memo","getDeps","opts","deps","depTime","debug","newDeps","some","dep","resultTime","depEndTime","resultEndTime","resultFpsPercentage","pad","num","console","info","createHeader","table","_options$id","header","isPlaceholder","placeholderId","depth","subHeaders","colSpan","rowSpan","headerGroup","getLeafHeaders","leafHeaders","recurseHeader","getContext","_features","feature","Headers","getHeaderGroups","getAllColumns","getVisibleLeafColumns","getState","columnPinning","allColumns","leafColumns","_left$map$filter","_right$map$filter","leftColumns","columnId","find","rightColumns","buildHeaderGroups","_table$options$debugA","debugAll","debugHeaders","getCenterHeaderGroups","_table$options$debugA2","getLeftHeaderGroups","_left$map$filter2","_table$options$debugA3","getRightHeaderGroups","_right$map$filter2","_table$options$debugA4","getFooterGroups","headerGroups","reverse","_table$options$debugA5","getLeftFooterGroups","_table$options$debugA6","getCenterFooterGroups","_table$options$debugA7","getRightFooterGroups","_table$options$debugA8","getFlatHeaders","headers","_table$options$debugA9","getLeftFlatHeaders","_table$options$debugA10","getCenterFlatHeaders","_table$options$debugA11","getRightFlatHeaders","_table$options$debugA12","getCenterLeafHeaders","flatHeaders","_header$subHeaders","_table$options$debugA13","getLeftLeafHeaders","_header$subHeaders2","_table$options$debugA14","getRightLeafHeaders","_header$subHeaders3","_table$options$debugA15","center","_left$0$headers","_left$","_center$0$headers","_center$","_right$0$headers","_right$","_table$options$debugA16","columnsToGroup","headerFamily","_headerGroups$0$heade","_headerGroups$","maxDepth","findMaxDepth","getIsVisible","_column$columns","createHeaderGroup","headersToGroup","pendingParentHeaders","headerToGroup","latestPendingParentHeader","bottomHeaders","recurseHeadersForSpans","childRowSpans","childColSpan","childRowSpan","defaultColumnSizing","minSize","maxSize","MAX_SAFE_INTEGER","ColumnSizing","getDefaultColumnDef","getInitialState","columnSizing","columnSizingInfo","startOffset","startSize","deltaOffset","deltaPercentage","isResizingColumn","columnSizingStart","getDefaultOptions","columnResizeMode","columnResizeDirection","onColumnSizingChange","onColumnSizingInfoChange","createColumn","getSize","_column$columnDef$min","_column$columnDef$max","columnSize","columnDef","getStart","getLeftVisibleLeafColumns","getRightVisibleLeafColumns","findIndex","prevSiblingColumn","resetSize","setColumnSizing","_ref2","_","getCanResize","_column$columnDef$ena","_table$options$enable","enableResizing","enableColumnResizing","getIsResizing","sum","_header$column$getSiz","prevSiblingHeader","getResizeHandler","getColumn","canResize","persist","isTouchStartEvent","newColumnSizing","updateOffset","eventType","clientXPos","setColumnSizingInfo","_old$startOffset","_old$startSize","deltaDirection","_ref3","headerSize","onEnd","mouseEvents","moveHandler","upHandler","touchEvents","cancelable","stopPropagation","_e$touches$","passiveIfSupported","passiveSupported","supported","noop","passiveEventSupported","resetColumnSizing","defaultState","_table$initialState$c","resetHeaderSizeInfo","_table$initialState$c2","getTotalSize","_table$getHeaderGroup","_table$getHeaderGroup2","reduce","getLeftTotalSize","_table$getLeftHeaderG","_table$getLeftHeaderG2","getCenterTotalSize","_table$getCenterHeade","_table$getCenterHeade2","getRightTotalSize","_table$getRightHeader","_table$getRightHeader2","Expanding","expanded","onExpandedChange","paginateExpandedRows","queued","_autoResetExpanded","_table$options$autoRe","autoResetAll","autoResetExpanded","manualExpanding","_queue","resetExpanded","setExpanded","toggleAllRowsExpanded","getIsAllRowsExpanded","_table$initialState$e","_table$initialState","getCanSomeRowsExpand","getPrePaginationRowModel","flatRows","row","getCanExpand","getToggleAllRowsExpandedHandler","getIsSomeRowsExpanded","values","getRowModel","getIsExpanded","getExpandedDepth","rowsById","splitId","getPreExpandedRowModel","getSortedRowModel","getExpandedRowModel","_getExpandedRowModel","createRow","toggleExpanded","_expanded","exists","oldExpanded","rowId","_table$options$getIsR","getIsRowExpanded","_table$options$getRow","_row$subRows","getRowCanExpand","enableExpanding","subRows","getIsAllParentsExpanded","isFullyExpanded","currentRow","parentId","getRow","getToggleExpandedHandler","canExpand","includesString","filterValue","_row$getValue","getValue","autoRemove","val","testFalsey","includesStringSensitive","_row$getValue2","equalsString","_row$getValue3","arrIncludes","_row$getValue4","arrIncludesAll","_row$getValue5","arrIncludesSome","_row$getValue6","equals","weakEquals","inNumberRange","rowValue","resolveFilterValue","unsafeMin","unsafeMax","parsedMin","parsedMax","Infinity","temp","filterFns","shouldAutoRemoveFilter","filterFn","aggregationFns","_leafRows","childRows","nextValue","extent","mean","leafRows","median","every","mid","nums","sort","unique","Set","uniqueCount","_columnId","RowSelection","rowSelection","onRowSelectionChange","enableRowSelection","enableMultiRowSelection","enableSubRowSelection","setRowSelection","resetRowSelection","_table$initialState$r","toggleAllRowsSelected","getIsAllRowsSelected","preGroupedFlatRows","getPreGroupedRowModel","getCanSelect","toggleAllPageRowsSelected","resolvedValue","getIsAllPageRowsSelected","rows","mutateRowIsSelected","getPreSelectedRowModel","getCoreRowModel","getSelectedRowModel","rowModel","selectRowsFn","debugTable","getFilteredSelectedRowModel","getFilteredRowModel","getGroupedSelectedRowModel","isAllRowsSelected","paginationFlatRows","getPaginationRowModel","isAllPageRowsSelected","getIsSomeRowsSelected","_table$getState$rowSe","totalSelected","getIsSomePageRowsSelected","getIsSelected","getIsSomeSelected","getToggleAllRowsSelectedHandler","getToggleAllPageRowsSelectedHandler","toggleSelected","isSelected","_opts$selectChildren","selectedRowIds","selectChildren","isRowSelected","isSubRowSelected","getIsAllSubRowsSelected","getCanSelectSubRows","_table$options$enable2","getCanMultiSelect","_table$options$enable3","getToggleSelectedHandler","canSelect","_target","includeChildren","newSelectedFlatRows","newSelectedRowsById","recurseRows","_row$subRows2","selection","_selection$row$id","_row$subRows3","allChildrenSelected","someSelected","subRow","subRowChildrenSelected","reSplitAlphaNumeric","compareBasic","compareAlphanumeric","aStr","bStr","aa","shift","bb","an","bn","combo","sortingFns","alphanumeric","rowA","rowB","alphanumericCaseSensitive","text","textCaseSensitive","datetime","basic","features","columnVisibility","onColumnVisibilityChange","toggleVisibility","getCanHide","setColumnVisibility","_table$getState$colum","_table$getState$colum2","enableHiding","getToggleVisibilityHandler","_getAllVisibleCells","getAllCells","cells","cell","debugRows","getVisibleCells","getLeftVisibleCells","getCenterVisibleCells","getRightVisibleCells","makeVisibleColumnsMethod","getColumns","debugColumns","getVisibleFlatColumns","getAllFlatColumns","getAllLeafColumns","getLeftLeafColumns","getRightLeafColumns","getCenterVisibleLeafColumns","getCenterLeafColumns","resetColumnVisibility","toggleAllColumnsVisible","_value","getIsAllColumnsVisible","getIsSomeColumnsVisible","getToggleAllColumnsVisibilityHandler","columnOrder","onColumnOrderChange","setColumnOrder","resetColumnOrder","_getOrderColumnsFn","grouping","groupedColumnMode","orderedColumns","columnOrderCopy","columnsCopy","targetColumnId","foundIndex","splice","nonGroupingColumns","col","orderColumns","rowPinning","onColumnPinningChange","onRowPinningChange","pin","columnIds","getLeafColumns","setColumnPinning","_old$left3","_old$right3","_old$left","_old$right","_old$left2","_old$right2","getCanPin","_d$columnDef$enablePi","enablePinning","enableColumnPinning","getIsPinned","leafColumnIds","isLeft","isRight","getPinnedIndex","includeLeafRows","includeParentRows","leafRowIds","getLeafRows","parentRowIds","getParentRows","rowIds","setRowPinning","_old$top3","_old$bottom3","_old$top","_old$bottom","_old$top2","_old$bottom2","has","_ref4","enableRowPinning","isTop","isBottom","_table$_getPinnedRows","_visiblePinnedRowIds$","visiblePinnedRowIds","_getPinnedRows","_ref5","allCells","leftAndRight","resetColumnPinning","getIsSomeColumnsPinned","_pinningState$positio","pinningState","_pinningState$left","_pinningState$right","resetRowPinning","_table$initialState2","getIsSomeRowsPinned","_pinningState$positio2","_pinningState$top","_pinningState$bottom","visibleRows","pinnedRowIds","_table$options$keepPi","keepPinnedRows","getTopRows","getBottomRows","getCenterRows","allRows","topAndBottom","columnFilters","globalFilter","onColumnFiltersChange","onGlobalFilterChange","filterFromLeafRows","maxLeafRowFilterDepth","globalFilterFn","getColumnCanGlobalFilter","_table$getCoreRowMode","_getAllCellsByColumnId","getAutoFilterFn","firstRow","getFilterFn","_table$options$filter","_table$options$filter2","getCanFilter","enableColumnFilter","enableColumnFilters","enableFilters","accessorFn","getCanGlobalFilter","_column$columnDef$ena2","_table$options$enable4","_table$options$getCol","enableGlobalFilter","getIsFiltered","getFilterIndex","getFilterValue","_table$getState$colum3","setFilterValue","setColumnFilters","previousfilter","newFilter","_old$filter","newFilterObj","_old$map","_getFacetedRowModel","getFacetedRowModel","getPreFilteredRowModel","_getFacetedUniqueValues","getFacetedUniqueValues","Map","_getFacetedMinMaxValues","getFacetedMinMaxValues","columnFiltersMeta","getGlobalAutoFilterFn","getGlobalFilterFn","_table$options$filter3","_table$options$filter4","_functionalUpdate","setGlobalFilter","resetGlobalFilter","resetColumnFilters","_getFilteredRowModel","manualFiltering","_getGlobalFacetedRowModel","getGlobalFacetedRowModel","_getGlobalFacetedUniqueValues","getGlobalFacetedUniqueValues","_getGlobalFacetedMinMaxValues","getGlobalFacetedMinMaxValues","sorting","sortingFn","sortUndefined","onSortingChange","isMultiSortEvent","shiftKey","getAutoSortingFn","firstRows","isString","getAutoSortDir","getSortingFn","_table$options$sortin","_table$options$sortin2","toggleSorting","desc","multi","nextSortingOrder","getNextSortingOrder","hasManualValue","setSorting","existingSorting","existingIndex","sortAction","newSorting","nextDesc","_table$options$maxMul","getCanMultiSort","maxMultiSortColCount","getFirstSortDir","_column$columnDef$sor","sortDescFirst","firstSortDirection","isSorted","getIsSorted","enableSortingRemoval","enableMultiRemove","getCanSort","enableSorting","enableMultiSort","_table$getState$sorti","columnSort","getSortIndex","_table$getState$sorti2","_table$getState$sorti3","clearSorting","getToggleSortingHandler","canSort","resetSorting","_table$initialState$s","getPreSortedRowModel","getGroupedRowModel","_getSortedRowModel","manualSorting","aggregatedCell","_toString","_props$getValue","aggregationFn","onGroupingChange","toggleGrouping","setGrouping","getCanGroup","enableGrouping","getIsGrouped","_table$getState$group","getGroupedIndex","_table$getState$group2","getToggleGroupingHandler","canGroup","getAutoAggregationFn","getAggregationFn","_table$options$aggreg","_table$options$aggreg2","resetGrouping","_table$initialState$g","_getGroupedRowModel","manualGrouping","groupingColumnId","getGroupingValue","_groupingValuesCache","original","createCell","getIsPlaceholder","getIsAggregated","pagination","pageIndex","pageSize","onPaginationChange","_autoResetPageIndex","autoResetPageIndex","manualPagination","resetPageIndex","setPagination","resetPagination","_table$initialState$p","setPageIndex","maxPageIndex","pageCount","_table$initialState$p2","resetPageSize","_table$initialState$p3","setPageSize","topRowIndex","setPageCount","_table$options$pageCo","newPageCount","getPageOptions","getPageCount","pageOptions","getCanPreviousPage","getCanNextPage","previousPage","nextPage","_getPaginationRowModel","_table$options$pageCo2","ceil","_options$initialState","defaultOptions","_feature$getInitialSt","queuedTimeout","coreInstance","cb","catch","error","reset","newOptions","mergeOptions","_getRowId","getRowId","_getCoreRowModel","searchAll","_getDefaultColumnDef","defaultColumn","_defaultColumn","resolvedColumnDef","accessorKey","_props$renderValue$to","_props$renderValue","renderValue","_getColumnDefs","columnDefs","recurseColumns","_resolvedColumnDef$id","originalRow","getFlatColumns","flatMap","_column$columns2","groupingColumnDef","_getAllFlatColumnsById","flatColumns","acc","rowIndex","_valuesCache","_uniqueValuesCache","getUniqueValues","getParentRow","parentRows","parentRow","getRenderValue","_cell$getValue","createColumnHelper","accessor","group","data","accessRows","originalRows","_row$originalSubRows","getSubRows","originalSubRows","sortingState","sortedFlatRows","availableSorting","_table$getColumn","columnInfoById","sortEntry","invertSorting","sortData","sortedData","_sortEntry$desc","columnInfo","isDesc","sortInt","aUndefined","bUndefined"],"sourceRoot":""}